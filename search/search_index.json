{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"UniNotes","text":"<p>Welcome to UniNotes, a resource for university students to access and learn from notes and materials.</p> <p>UniNotes is brought to you by DeeKahy and Mantarias, two dedicated students who understand the importance of having a reliable and comprehensive resource for studying. Our goal is to provide students with a collection of notes and materials that cover a wide range of courses and subjects, as well as to offer a platform for students to share and contribute their own notes.</p> <p>On UniNotes, you will find a collection of notes, summaries, and study guides, organized by subject and course. We have also included a search feature to help you find specific information or resources quickly and easily.</p> <p>We hope that you find UniNotes to be a valuable resource and we welcome your feedback and suggestions. If you have any questions or need help with your studies, please don't hesitate to contact us.</p> <p>Thank you for visiting UniNotes. We look forward to helping you succeed in your studies.</p>"},{"location":"1.%20Semester/DTG/Workshops/Pottential-Qutestions/","title":"Pottential Qutestions","text":""},{"location":"1.%20Semester/DTG/Workshops/Pottential-Qutestions/#what-is-induction","title":"What is induction?","text":"<p>Induction is a method of mathematical reasoning in which a conclusion is drawn from a sequence of statements, each of which is supported by evidence. </p>"},{"location":"1.%20Semester/DTG/Workshops/Pottential-Qutestions/#example","title":"example","text":"<p>We want to prove that the sum of the first n odd numbers is always equal to n^2.</p> <p>Base case: When n = 1, the sum of the first odd number (1) is 1^2 = 1.</p> <p>Inductive step: Assume that the statement is true for n = k (where k is any positive integer). We will now prove that it is also true for n = k+1.</p> <p>The sum of the first k+1 odd numbers is the sum of the first k odd numbers plus the (k+1)th odd number.</p> <p>The sum of the first k odd numbers is k^2 (by our assumption), and the (k+1)th odd number is (2k+1).</p> <p>Therefore, the sum of the first k+1 odd numbers is k^2 + (2k+1) = k^2 + 2k + 1 = (k+1)^2.</p> <p>Thus, we have shown that the statement is true for n = k+1, and since it is also true for n = 1 (the base case), it is true for all positive integers n by induction.</p>"},{"location":"1.%20Semester/DTG/Workshops/Pottential-Qutestions/#what-sorting-algorithms-do-we-know","title":"What sorting algorithms do we know","text":""},{"location":"1.%20Semester/DTG/Workshops/Pottential-Qutestions/#merge-sort","title":"Merge Sort","text":"<p>Merge sort is a divide and conquer algorithm that divides an array into two smaller sub-arrays and then merges them back together in a sorted order. It first divides the array into two equal parts, recursively sorts each half, and then merges the two sorted halves back together. It has a time complexity of O(n log n) and is a stable sort.</p>"},{"location":"1.%20Semester/DTG/Workshops/Pottential-Qutestions/#bubble-sort","title":"Bubble Sort","text":"<p>Bubble sort is a simple sorting algorithm that repeatedly steps through the list, compares adjacent elements and swaps them if they are in the wrong order. The pass through the list is repeated until the list is sorted. It has a time complexity of O(n^2) and is a stable sort.</p>"},{"location":"1.%20Semester/DTG/Workshops/Pottential-Qutestions/#quick-sort","title":"Quick Sort","text":"<p>QuickSort is a divide-and-conquer algorithm. It selects a 'pivot' element from the array and partition the other elements into two sub-arrays, according to whether they are less than or greater than the pivot. The sub-arrays are then recursively sorted. It has a time complexity of O(n log n) and is an unstable sort.</p>"},{"location":"1.%20Semester/DTG/Workshops/Pottential-Qutestions/#which-searching-algorithm-is-better-linear-og-binary-search","title":"Which searching algorithm is better, linear og binary search?","text":"<pre><code># making x equals to m for maple to math it right\nx := m\nn := 10000;\nbin1 := x*log[2](n) + n*log[2](n);\nlin1 := n*x; \napprox(solve(bin1 = lin1)); \n= 13.305\n</code></pre>"},{"location":"1.%20Semester/DTG/Workshops/Pottential-Qutestions/#forms","title":"Forms","text":"<p>Note</p> <p>P(x) \"\u2227\" \u00acQ(x) = CNF</p> <p>P(x) \"\u2228\" \u00acQ(x) = DNF</p> <p>\"(P \u2228 Q)\" \u2227 \"(P \u2228 \u00acQ)\" = PCNF</p> <p>\"(P \u2227 Q)\" \u2228 \"(P \u2227 \u00acQ)\" = PDNF</p> <p>(P \u2228 Q) \u2227 \"(P)\" = CNF because there is no second (clause)</p> <p>(P \u2227 Q) \u2228 \"(P)\" = DNF because there is no second (clause)</p>"},{"location":"1.%20Semester/DTG/Workshops/Pottential-Qutestions/#how-many-minterms-can-you-make-when-you-have-4-and-5-variables","title":"How many minterms can you make when you have 4 and 5 variables?","text":"<p>The number of minterms made depends on variable count =v | number of minterms = 2<sup>v</sup></p> <p>Example</p> <p>5 variables = 2<sup>5</sup> = 32 4 variables = 2<sup>4</sup> = 16</p> <p>The number of minterms that can be made when you have 3 variables is 2^3 = 8 minterms. This is because for each variable, there are 2 possibilities (either 0 or 1), and for 3 variables, there are 2^3 = 8 possible combinations.</p> <p>Similarly, the number of minterms that can be made when you have 5 variables is 2^5 = 32 minterms. This is because for each variable, there are 2 possibilities (either 0 or 1), and for 5 variables, there are 2^5 = 32 possible combinations.</p>"},{"location":"1.%20Semester/DTG/Workshops/Pottential-Qutestions/#what-is-big-o-notation","title":"What is Big O notation","text":"<p>Big O notation is a way to describe the upper bound of the running time of an algorithm, which gives an idea of how the time complexity of the algorithm scales as the input size increases.</p>"},{"location":"1.%20Semester/DTG/Workshops/Pottential-Qutestions/#what-is-big-theta-notation","title":"What is Big Theta notation","text":"<p>Big Theta notation, is a way to describe the tight bound of the running time of an algorithm,</p>"},{"location":"1.%20Semester/DTG/Workshops/Pottential-Qutestions/#what-is-big-omega-notation","title":"what is big omega notation","text":"<p>Big O notation is a way to describe the lower bound of the running time of an algorithm,</p>"},{"location":"1.%20Semester/DTG/Workshops/Pottential-Qutestions/#_1","title":"Pottential Qutestions","text":""},{"location":"1.%20Semester/DTG/Workshops/Pottential-Qutestions/#how-to-calculate-time-complexity","title":"How to calculate time complexity","text":"<ol> <li> <p>Break down the algorithm into smaller parts, each with its own operations count.</p> </li> <li> <p>Identify the part of the algorithm that takes the most time, which is the part that dominates the running time. This is known as the \"time-critical\" part of the algorithm.</p> </li> <li> <p>Write an expression that represents the number of operations as a function of the input size. This is known as the time complexity of the algorithm.</p> </li> <li> <p>Use the Big O notation to express the time complexity of the algorithm, where O(f(n)) represents the upper bound of the running time. For example, O(n) represents a linear time complexity, O(n^2) represents a quadratic time complexity and so on.</p> </li> <li> <p>Simplify the time complexity expression if possible, to express it in the simplest form.</p> </li> <li> <p>Validate the time complexity by testing the algorithm with different input sizes and observing how the running time changes.</p> </li> </ol>"},{"location":"1.%20Semester/DTG/Workshops/Pottential-Qutestions/#time-compexity-table","title":"Time Compexity Table","text":"Algorythm Best Average Worst Worst Selection Sort \u03a9(n^2) \u03b8(n^2) O(n^2) O(1) Bubble Sort \u03a9(n) \u03b8(n^2) O(n^2) O(1) Insertion Sort \u03a9(n) \u03b8(n^2) O(n^2) O(1) Heap Sort \u03a9(n log(n)) \u03b8(n log(n)) O(n log(n)) O(1) Quick Sort \u03a9(n log(n)) \u03b8(n log(n)) O(n^2) O(n) Merge Sort \u03a9(n log(n)) \u03b8(n log(n)) O(n log(n)) O(n) Bucket Sort \u03a9(n +k) \u03b8(n +k) O(n^2) O(n) Radix Sort \u03a9(nk) \u03b8(nk) O(nk) O(n + k) Count Sort \u03a9(n +k) \u03b8(n +k) O(n +k) O(k) Shell Sort \u03a9(n log(n)) \u03b8(n log(n)) O(n^2) O(1) Tim Sort \u03a9(n) \u03b8(n log(n)) O(n log (n)) O(n) Tree Sort \u03a9(n log(n)) \u03b8(n log(n)) O(n^2) O(n) Cube Sort \u03a9(n) \u03b8(n log(n)) O(n log(n)) O(n)"},{"location":"1.%20Semester/DTG/Workshops/Workshop-1/Slides/","title":"Slides","text":"<p>Presentation</p>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-2/Exercise-1/","title":"Exercise 1","text":""},{"location":"1.%20Semester/DTG/Workshops/Workshop-2/Exercise-1/#1-a-explain-why-f-is-not-a-function-using-the-list-3-4-4-5-as-an-example","title":"1 a) Explain why f is not a function using the list (3, 4, 4, 5) as an example.","text":"<p>{ align=right }</p> <p>Because a function is defined by having only 1 output, and if you give it this list and tell it to search for the number 4 it would output the index of 4 twice, since the number four exists twice.</p>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-2/Exercise-1/#1-b-if-we-require-the-lists-we-use-to-not-have-repeated-elements-then-f-can-be-seen-as-a-function-3-4-5-decide-whether-this-function-is-injective-surjective-or-bijective","title":"1 b) If we require the lists we use to not have repeated elements, then f can be seen as a function (3, 4, 5). Decide whether this function is injective, surjective or bijective.","text":"<p>Then it must be injective because we don't get 2 results, which also means that there are always some that won't return.</p> <p>{ align=center }</p>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-2/Exercise-2/","title":"Exercise 2","text":"<p>Info</p> <p>We will now study two such algorithms, linear search and binary search. Note that to use the binary search algorithm we need the list (a1, . . . , an) to be sorted.</p>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-2/Exercise-2/#a-implement-the-two-algorithms-in-the-provided-file-searchcomparec","title":"a) Implement the two algorithms in the provided file SearchCompare.c.","text":"<pre><code>// procedure: LinearSearch(x: element, (a1, a2 , . . . , an): list)\nint i = 0;  \n/* Fill in your code HERE! */  \nwhile (i &lt;= N - 1 &amp;&amp; x != array[i]) {  \n    i++;  \n}  \nif (i &lt;= N-1) {  \n    return i;  \n} else {  \n    return -1;  \n}\n</code></pre> <pre><code>// Procedure: BinarySearch(x: element, (a1, a2, . . . , an): list)\nint i = 0;  \n/* Fill in your code HERE */  \nint j = N;  \nint m;  \n\nwhile (i &lt; j) {  \n    m = (i + j) / 2;  \n    if (x &gt; array[m]) {  \n        i = m + 1;  \n    } else {  \n        j = m;  \n    }  \n}  \nif (x == array[i]) {  \n    return i;  \n}else {  \n    return -1;  \n}\n</code></pre>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-2/Exercise-2/#b-check-if-the-element-7000-appears-in-the-lists-list500txt-list1000txt-list2000txt-list4000txt-and-list9000txt","title":"b) Check if the element 7000 appears in the lists List500.txt, List1000.txt, List2000.txt, List4000.txt, and List9000.txt.","text":"<p>Info</p> <p>The code provided runs each algorithm 1 Million times and measures the time they take.</p> <p>7000 does not exist in any of the lists, which means we can use it as a benchmark for the different Algorithms at their worst performance.</p>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-2/Exercise-2/#c-take-note-of-how-long-the-algorithms-take-for-the-different-lists-and-plot-list-size-on-the-x-axis-and-the-time-it-took-on-the-y-axis","title":"c) Take note of how long the algorithms take for the different lists and plot list size on the x-axis and the time it took on the y-axis","text":"<p>Binary search is faster than linear search because it uses the ordered nature of our data, to eliminate half of the remaining elements as a possible solution each time, reducing the number of comparisons needed to find an element, from O(n) to O(log n) which makes it faster for large arrays.</p> <p>{ align=center } { align=center }</p>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-2/Exercise-3/","title":"Exercise 3","text":"<p>Info</p> <p>We will now study the theoretical complexity of the two algorithms. We will count comparisons made in the course of the algorithm.</p>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-2/Exercise-3/#a-argue-that-the-linear-search-algorithm-will-use-2n-2-comparisons-in-the-worst-case-describe-the-inputs-for-which-this-will-happen","title":"a) Argue that the linear search algorithm will use 2n + 2 comparisons in the worst case. Describe the inputs for which this will happen.","text":"<ol> <li> <p>In the worst case i.e. the number not being in the list, every number will have to be checked, therefore the loop will run n times.</p> </li> <li> <p>But because we need to do 1 check in the loop itself, this turns from n*1 into n*2.</p> </li> <li> <p>After all the values have been checked it checks again if we should continue the loop but that returns false as the number is equals n so the loop ends and the short circuit doesnt execute so +1</p> </li> <li> <p>then the if sentence checks if i is lower then n which is another +1</p> </li> <li> <p>now our our final result turned into 2*n + 2</p> </li> </ol>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-2/Exercise-3/#b-show-that-the-number-of-comparisons-in-the-worst-case-for-linear-search-is-in-n","title":"b) Show that the number of comparisons in the worst case for linear search is in \u0398(n).","text":"<ul> <li> <p>In the worst case, the element we are searching for is not in the list or is at the last position of the list.</p> </li> <li> <p>The algorithm will have to iterate through the entire array to find the element, making n comparisons.</p> </li> <li> <p>The number of comparisons is directly proportional to the size of the list.</p> </li> <li> <p>Therefore, the time complexity for linear search in the worst case is O(n).</p> </li> </ul>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-2/Exercise-3/#c-consider-the-binary-search-algorithm-and-assume-that-the-list-has-length-n-2k","title":"c) Consider the binary search algorithm and assume that the list has length n = 2<sup>k</sup>","text":""},{"location":"1.%20Semester/DTG/Workshops/Workshop-2/Exercise-3/#check-that-every-full-iteration-of-the-while-loop-uses-two-comparisons","title":"Check that every full iteration of the while loop uses two comparisons.","text":"<pre><code>// the condition for this while loop is the first comparison.\nwhile (i &lt; j) {  \n    m = (i + j) / 2;  \n\n    // this if else statement is the 2nd check.\n    if (x &gt; array[m]) {  \n        i = m + 1;  \n    } else {  \n        j = m;  \n    }  \n}  \n</code></pre>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-2/Exercise-3/#show-that-in-the-first-iteration-of-the-while-loop-m-2k-1","title":"Show that in the first iteration of the while loop m = 2<sup>k-1</sup>","text":"<p><pre><code>int i = 0;  \n/* Fill in your code HERE */  \nint j = N;  \nint m;  \n\n    // loop is the first check.\nwhile (i &lt; j) {  \n    m = (i + j) / 2;  \n\n    // this if else statement is the 2nd check.\n    if (x &gt; array[m]) {  \n        i = m + 1;  \n    } else {  \n        j = m;  \n    }  \n}  \nif (x == array[i]) {  \n    return i;  \n}else {  \n    return -1;  \n}\n</code></pre> Because i is 0. m = (0+2<sup>k</sup>)/2 = 2<sup>k-1</sup></p>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-2/Exercise-3/#argue-that-after-the-first-time-the-while-loop-has-run-we-have-excluded-half-the-elements-of-the-list","title":"Argue that after the first time the while loop has run, we have excluded half the elements of the list.","text":"<p>This statement is true because of the way binary search works, which is by splitting each half in the middle and then splits that middle again.</p> <p>Note</p> <p>For binary search to work and be efficient it already has to be sorted.</p>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-2/Exercise-3/#check-that-we-have-to-half-the-list-log2n-times-to-end-up-with-a-list-of-just-one-element-remember-that-we-assume-n-2k-what-happens-if-n-is-not-a-power-of-2","title":"Check that we have to half the list log2(n) times, to end up with a list of just one element. (Remember that we assume n = 2^k. What happens if n is not a power of 2?)","text":"<p><pre><code># searching for 5;\n[1,2,3,4,5,6,7,8]\n\n[1,2,3,4]  5 is in this side -&gt; [5,6,7,8]\n[5,6]&lt;- 5 is in this side [7,8]\n[5]&lt;- 5 is in this side [5]\n\n[5] &lt;- there is only 1 element left.\n</code></pre> We decide that n = 2<sup>k</sup> and since the list gets halved each time, until only 1 element remains the number of elements remaining is divided by 2 k times. If n is not the power of 2 \"if\" would just compare the last number (5) to the other list (6,7).</p>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-2/Exercise-3/#1-consider-the-final-steps-of-the-algorithm-once-i-j-the-while-loop-checks-its-run-condition-once-more-then-the-algorithm-continues-to-check-if-we-have-found-the-element-in-question-show-that-the-algorithm-will-need-2log2n-2-comparisons","title":"1. Consider the final steps of the algorithm. Once i = j the while loop checks its run condition once more. Then the algorithm continues to check if we have found the element in question. Show that the algorithm will need 2*log<sub>2</sub>(n) + 2 comparisons.","text":"<p>For each loop we have 2 compartments and the loop runs log<sub>2</sub>(n) time, then we have an if statement at the end to break the loop. And because it has if statements after the loop we plus 1 to 2*log<sub>2</sub>(n) + 2</p>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-2/Exercise-3/#d-show-that-the-number-of-comparisons-needed-for-binary-search-is-log2n","title":"d) Show that the number of comparisons needed for binary search is \u0398(log<sub>2</sub>(n))","text":"<p>We need to figure out if 2log<sub>2</sub>(n)+2 is Big O to log<sub>2</sub>(n) (+c) which we can do by setting c = 3 which therefore makes it grow faster than 2log<sub>2</sub>(n)+2. So yes it is Big O. Now we need to find if also is Omega which we can do by just setting c to be 1.</p> <p>Note</p> <p>we are essentially doing the oposite as in finding if its big O. Because our function is both Big O and Omega of our compartment number thingy log<sub>2</sub>(n).</p>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-2/Exercise-3/#e-compare-these-theoretical-results-with-the-results-you-got-from-your-implementation","title":"e) Compare these theoretical results with the results you got from your implementation","text":"<p>From the result before we can clearly see that Lin grows in a linear fashion and our binary function grows logarithmic.</p>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-2/Exercise-3/#f-assume-we-have-a-list-of-10000-elements-and-need-to-search-for-several-elements-in-it-we-want-to-figure-out-when-it-pays-off-to-sort-the-list-before-searching-use-the-approximations-for-the-following-exercises-when-calculating-the-number-of-comparisons-made-ie-assume-linear-search-uses-n-comparisons-and-binary-search-uses-log2n-comparisons","title":"f) Assume we have a list of 10000 elements and need to search for several elements in it. We want to figure out when it pays off to sort the list before searching. Use the \u0398 approximations for the following exercises when calculating the number of comparisons made, i.e., assume linear search uses n comparisons and binary search uses log2(n) comparisons.","text":"<ul> <li>How many comparisons will be used when we search for m elements using linear search? </li> </ul> <p>It would use n*m comparisons.</p> <ul> <li>We will see that a list of n elements can be sorted with an effort of \u0398(n log2(n)). How many operations are needed if we sort the list first, then search for m elements using binary search? </li> </ul> <p>n log2(n) + (log2(n) * m)</p> <ul> <li>At which point, i.e., for which m, do these two approaches have similar complexity? Which one is better when?</li> </ul> <p>linear search is better before 13.305 searches afterwards binear search is faster</p> <pre><code># making x equals to m for maple to math it right\nx := m\nn := 10000;\nbin1 := x*log[2](n) + n*log[2](n);\nlin1 := n*x; \napprox(solve(bin1 = lin1)); \n= 13.305\n</code></pre>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-3/Exercise-1/","title":"Exercise 1","text":"<p>Info</p> <p>In this workshop we will study the MergeSort sorting algorithm.</p> <p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nvoid Merge(int L[], int start, int end, int mid);\nvoid MergeSort(int L[], int start, int end);\nvoid printList(int L[], int size);\n\nint main(void){\n  int L[] = { 5, 3, 8, 1, 6, 10, 7, 2, 4, 9 };\n  int L_size = sizeof(L) / sizeof(L[0]);\n\n  printf(\"Given list \\n\");\n  printList(L, L_size);\n\n  MergeSort(L, 0, L_size - 1);\n\n  printf(\"The sorted list \\n\");\n  printList(L, L_size);\n  return 0;\n}\n\nvoid Merge(int L[], int start, int end, int mid){\n  int i, j, k;\n  int n1 = mid - start + 1;\n  int n2 = end - mid;\n  int Left[n1], Right[n2];\n\n  for (i = 0; i &lt; n1; i++)\n    Left[i] = L[start + i];\n  for (j = 0; j &lt; n2; j++)\n    Right[j] = L[mid + 1 + j];\n\n  i = 0;\n  j = 0;\n  k = start;\n  while (i &lt; n1 &amp;&amp; j &lt; n2) {\n    if (Left[i] &lt;= Right[j]) {\n      L[k] = Left[i];\n      i++;\n    } else {\n      L[k] = Right[j];\n      j++;\n    }\n    k++;\n  }\n\n  while (i &lt; n1) {\n    L[k] = Left[i];\n    i++;\n    k++;\n  }\n  while (j &lt; n2) {\n    L[k] = Right[j];\n    j++;\n    k++;\n  }\n}\n\nvoid MergeSort(int L[], int start, int end){\n  /*Here goes your code as well*/\n  if (start &lt; end) {\n    int mid = (start + end) / 2;\n    MergeSort(L, start, mid);\n    MergeSort(L, mid + 1, end);\n    Merge(L, start, end, mid);\n  }\n}\n\nvoid printList(int L[], int size){\n  int i;\n  for (i = 0; i &lt; size; i++)\n    printf(\"%d \", L[i]);\n  printf(\"\\n\");\n}\n</code></pre> And it returns {1,2,3,4,5,6,7,8,9,10}</p>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-3/Exercise-2/","title":"Exercise 2","text":""},{"location":"1.%20Semester/DTG/Workshops/Workshop-3/Exercise-2/#proof-by-using-induction-that-mergesort-returns-the-sorted-list-containing-the-same-elements-as-the-input-list-l-in-the-proof-you-may-assume-that-merge-returns-a-sorted-list-containing-the-elements-of-two-sorted-lists-given-as-inputs","title":"Proof by using induction, that Mergesort returns the sorted list containing the same elements as the input list L. In the proof you may assume, that Merge returns a sorted list containing the elements of two sorted lists given as inputs.","text":"<p>Mathematical induction is a way to systematically calculate any position in a table.  If I stand here can I argue that I also can stand a step higher (and so on and so on).</p>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-3/Exercise-2/#basis-step","title":"basis step","text":"<p>Lets consider the simplest case where the list L has only one element. In this case, the MergeSort function will not call itself recursively and will return the input list L as the sorted list in the original state. Because it is already sorted.</p> <pre><code>graph TD\n    L(\"L = {5}\") --&gt; Sorted(\"Sorted = {5}\")</code></pre>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-3/Exercise-2/#induction-step","title":"induction step","text":"<p>Assume that the statement is true for the case where the input list L has n elements &gt;= 1. That is, the MergeSort function returns a sorted list containing the same elements as the input list L with n elements.</p> <p>Now, consider the case where the input list L has n+1 elements. The MergeSort function will recursively divide the input list L into two subset, one with n/2 elements and the other with \"n/2 and n/2+1\" if even and \"(n+1)/2\" if odd element until it can not be split anymore. By our assumtion the merge sort will return a sorted list consiting of the same elements as L. Which is the same as in our base step, 1 element goes in, the same element comes out.</p> <p>Because we cannot split it any more the merge function will be called to merge the 2 sorted subsets into a single sorted array, since merge only rearanges the elements and doesnt delete, the returned sorted list will contain the same elements as the input list L.</p>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-3/Exercise-2/#end","title":"End","text":"<p>By induction, the statement is true for all cases where the input list L(n) is &lt;= 1</p> <pre><code>graph TD\n    L(\"L = {3, 1}\") --&gt; N(\"n/2 | {1}\");\n    L --&gt; N1(\"n/2+1 | {3}\");\n    N1 --&gt; SF\n    N --&gt; SF(\"Sorted = {1, 3}\")</code></pre>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-3/Exercise-3/","title":"Exercise 3","text":"<p>Important</p> <p>not done!</p>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-3/Exercise-3/#assume-that-merge-uses-exactly-a-b-1-comparisons-to-combine-two-lists-with-a-and-b-elements-furthermore-assume-that-the-length-of-the-input-list-l-is-n-2k-prove-by-using-induction-on-k-that-mergesort-uses-nlog-2n-1-2k-k-1-comparisons-to-sort-l-what-type-of-induction-did-you-use","title":"Assume that Merge uses (exactly) a + b \u2212 1 comparisons to combine two lists with a and b elements. Furthermore, assume that the length of the input list L is n = 2k. Prove by using induction on k, that Mergesort uses \"n(log 2(n) + 1) = 2k (k + 1)\" comparisons to sort L. What type of induction did you use?","text":""},{"location":"1.%20Semester/DTG/Workshops/Workshop-3/Exercise-3/#basis-step","title":"basis step","text":"<p>if n = 2 </p>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-3/Exercise-3/#inductive-step","title":"Inductive Step:","text":"<p>Base case</p> <p>k = </p> <p>n = 2<sup>k</sup></p> <p>let n = 2</p> <p>2 * 1 * (1 + 1)</p> <p>We can prove that the MergeSort function uses \"n(log 2(n) + 1) = 2k (k + 1)\" comparisons to sort the input list L by using mathematical induction on k, where k is the number of elements in the input list L.</p>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-3/Exercise-3/#base-case","title":"base case","text":"<p>Lets consider the simplest case where the list L has only one element. In this case, the MergeSort function will not call itself recursively and will not use any comparison to sort the input list L. (k = 1)</p>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-3/Exercise-3/#inductive-step_1","title":"Inductive Step:","text":"<p>Assume that the statement is true for the case where the input list L has 2<sup>k</sup> elements. That is, the MergeSort function uses \"2<sup>k</sup> (k + 1)\" comparisons to sort the input list L with 2<sup>k</sup> elements.</p> <p>2<sup>(k+1)</sup> = 2*2<sup>k</sup> </p> <p>n(log<sub>2</sub>(n) + 1) = 2<sup>k</sup>(k + 1) a + b \u2212 1</p>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-4/Exercise-1/","title":"Exercise 1","text":""},{"location":"1.%20Semester/DTG/Workshops/Workshop-4/Exercise-1/#1-how-many-ways-can-we-choose-x-y-z-where-100000-x-y-z-1000000","title":"1. How many ways can we choose {x, y, z}, where 100000 &lt; x, y, z \u2264  1000000?","text":"<p>(1000000-100000+1)^3 = 729'002'430'002'700'001</p>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-4/Exercise-1/#2-complete-the-accompanying-code-by-adding-the-functions-isprime-is2mod5-and-isgcd1-so-they-check-the-corresponding-condition-hint-for-isgcd1-the-function-does-not-need-to-compute-the-gcd-but-can-simply-check-possible-divisors-hint-for-is2mod5-find-a-way-to-apply-the-modulus-throughout-the-calculations-otherwise-you-will-get-much-too-big-numbers-very-quickly-when-calculating-9x","title":"2. Complete the accompanying code by adding the functions isPrime, is2mod5 and isGcd1 so they check the corresponding condition. (Hint for isGcd1: The function does not need to compute the gcd, but can simply check possible divisors. Hint for is2mod5: Find a way to apply the modulus throughout the calculations. Otherwise you will get much too big numbers very quickly when calculating 9x .)","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;math.h&gt;\n\n/* This function should return 1 if x is prime and 0 otherwise */\nint isPrime(int x){\n    if(x &lt;= 1) return 0;\n    for(int i = 2; i &lt;= sqrt(x); i++){\n        if(x % i == 0) return 0;\n    }\n    return 1;\n}\n\n\n/* This function should return 1 if gcd(x,2)=1 and 0 otherwise */\nint isGcd1(int x){\n    int a = x;\n    int b = 2;\n    int r;\n\n    while (b != 0) {\n        r = a % b;\n        a = b;\n        b = r;\n    }\n    return (a == 1);\n}\n\n/* This function should return 1 if 9^x-2 mod 5 = 2 and 0 otherwise */\nint is2mod5(int x){\n    return ((int)pow(9, x) - 2) % 5 == 2;\n}\n\n\nint main(void){\n  int x;\n  int p, q, r;\n\n  printf(\"What number do you want to test?\\n\");\n  scanf(\"%d\", &amp;x);\n  printf(\"x is %d\\n\", x);\n\n  p = isPrime(x);\n  q = isGcd1(x);\n  r = is2mod5(x);\n\n  if ((p &amp;&amp; !r) || !(p || !q || r) || (!p &amp;&amp; !q &amp;&amp; r)){\n    printf(\"You have found a valid x\\n\");\n    printf(\"p is %d, q is %d, and r is %d\\n\", p,q,r);\n  } else {\n    printf(\"Try again!\\n\");\n  }S\n\n  return EXIT_SUCCESS;\n}\n</code></pre>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-4/Exercise-1/#3-try-ten-different-values-of-x-and-see-if-you-can-find-one-that-fulfills-all-conditions","title":"3. Try (ten) different values of x and see if you can find one that fulfills all conditions.","text":"<p>1 = try again 2 = p is 1, q is 0, and r is 0 3 = try again 4 = try again 5 = try again 6 = try again 7 = try again 8 = try again 9 = try again 10 = try again 11 = p is 1, q is 1, and r is 0</p>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-4/Exercise-2/","title":"Exercise 2","text":""},{"location":"1.%20Semester/DTG/Workshops/Workshop-4/Exercise-2/#1-rewrite-the-condition-in-1-into-pdnf","title":"1  Rewrite the condition in (1) into PDNF.","text":"<ul> <li>P isprime</li> <li>R is2mod5</li> <li>Q isgcd1</li> </ul> <p>Form:</p> <p>(P(x) \u2227 \u00acR(x)) \u2228 \u00ac(P(x) \u2228 \u00acQ(x) \u2228 R(x)) \u2228 (\u00acP(x) \u2227 \u00acQ(x) \u2227 R(x))</p> <p>Into PDNF:</p> <ul> <li>(P(x) \u2227 \u00acR(x)) ==(P(x) \u2227 \u00acR(x) \u2227 Q(x)) \u2228 (P(x) \u2227 \u00acR(x) \u2227 \u00acQ(x))  </li> <li>\u00ac(P(x) \u2228 \u00acQ(x) \u2228 R(x)) == (\u00acP(x) \u2227 Q(x) \u2227 \u00acR(x)) </li> <li>(\u00acP(x) \u2227 \u00acQ(x) \u2227 R(x))  </li> </ul> <p>Solution: (P(x) \u2227 \u00acR(x) \u2227 Q(x)) \u2228 (P(x) \u2227 \u00acR(x) \u2227 \u00acQ(x)) \u2228 (\u00acP(x) \u2227 Q(x) \u2227 \u00acR(x)) \u2228 (\u00acP(x) \u2227 \u00acQ(x) \u2227 R(x))</p> <p>truth table:</p> P(x) R(x) Q(x) out T T T F T T F F T F T T T F F T F T T T F T F F F F T T F F F F"},{"location":"1.%20Semester/DTG/Workshops/Workshop-4/Exercise-2/#2-how-many-minterms-does-the-normalform-contain-what-does-this-mean-for-the-corresponding-truth-table","title":"2 How many minterms does the normalform contain? What does this mean for the corresponding truth table?","text":"<p>it has 4 minterms, this means that 4 out of the 8 rows need to be true.</p>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-4/Exercise-3/","title":"Exercise 3","text":""},{"location":"1.%20Semester/DTG/Workshops/Workshop-4/Exercise-3/#1-prove-the-following-theorem-let-x-be-a-positive-integer-it-holds-that-gcdx-2-1-if-and-only-if-x-is-odd","title":"1. Prove the following theorem: Let x be a positive integer. It holds that gcd(x, 2) = 1 if and only if x is odd.","text":"<pre><code>graph LR;\n    Input --&gt; Check;\n    Check --&gt;|x mod 2 = 0| Even;\n    Check --&gt;|x mod 2 = 1| Odd;\n    Even --&gt; Output;\n    Odd --&gt; Output;\n</code></pre> <p>Proof that x is odd when gcd(x,2) = 1</p> <ul> <li>If we have x = 2n + 1 (and odd number) the remainder will always be 1 when we devide it by 2, because 2 can never devide an odd number without using floating points.</li> </ul> <p>Proof that x is even when gcd(x,2) = 0</p> <ul> <li>If we have x = 2n (and even number) the remainder will always be 0 when we devide it by 2, because 2 can always devide an even number. </li> </ul> <p>Ps</p> <p>Euclidean algorithm</p>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-4/Exercise-3/#2-prove-the-following-theorem-let-x-be-a-positive-integer-it-holds-that-9-x-2-mod-5-2-is-equivalent-to-x-being-odd","title":"2. Prove the following theorem: Let x be a positive integer. It holds that 9 x \u2212 2 mod 5 = 2 is equivalent to x being odd.","text":"<ul> <li>if you put 9 to power of an even number like 9<sup>2n</sup> the last digit will always be 1</li> <li>if x is an odd number x = 2n +1 then 9<sup>x</sup> will always end with the last digit 9, as 1 * 9 is 9.</li> <li>9 to the power of anything will always end up with either the number 1 or the number 9.</li> <li>when 9 is to power of an odd number and we look at last digit this will be true(9-2)%5==2.</li> <li>when 9 is to an even number like 2 9<sup>2</sup> == (81-2)%5==2 is false as it is == 4.</li> <li>as it only alternates between those 2 digits depending if its even or odd we can use this to check if the number is even</li> </ul> <pre><code>graph LR;\n    Input --&gt; Check;\n    Check --&gt;|\"if(x = 2n)\"| Even(\"Last digit = 1\");\n    Check --&gt;|\"if(x = 2n +1)\"| Odd(\"Last digit = 9\");\n    Even --&gt; Output;\n    Odd --&gt; Output;</code></pre> <p>Info</p> <p>it will always alternate between 1 and 9.</p>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-4/Exercise-3/#3-explain-why-the-previous-theorems-show-that-qx-and-rx-are-the-same-function-hence-we-can-replace-rx-with-qx-in-1-and-show-that-it-is-equivalent-to","title":"3. Explain why the previous theorems show that Q(x) and R(x) are the same function. Hence we can replace R(x) with Q(x) in (1) and show that it is equivalent to:","text":"<pre><code>(P (x) \u2227 \u00acQ(x)) \u2228 \u00ac(P (x) \u2228 \u00acQ(x) \u2228 Q(x)) \u2228 (\u00acP (x) \u2227 \u00acQ(x) \u2227 Q(x))\n\u2261(P (x) \u2227 \u00acQ(x)) \u2228 \u00ac(P (x) \u2228 T) \u2228 (\u00acP (x) \u2227 F)\n\u2261P (x) \u2227 \u00acQ(x)\n</code></pre> <ol> <li>If we look at the 2 graphs below we can see that you can see that they are same</li> <li> <p>in the first graph if x is a odd number, we get the digit 9 and if its even we get 1, which will in turn return either true if it is 1 or false if it is 9.</p> </li> <li> <p>On the other graph we see the exact same thing, if its even get 0, and if its odd we get 1, which just translate into true and false.</p> </li> <li> <p>So thiese functions basically only check if a number is odd or if it is even making them equivalent. <pre><code>graph LR;\n    Input --&gt; Check;\n    Check --&gt;|\"if(x = 2n)\"| Even(\"Last digit = 1\");\n    Check --&gt;|\"if(x = 2n +1)\"| Odd(\"Last digit = 9\");\n    Even --&gt; Output;\n    Odd --&gt; Output;</code></pre></p> </li> </ol> <pre><code>graph LR;\n    Input --&gt; Check;\n    Check --&gt;|x mod 2 = 0| Even;\n    Check --&gt;|x mod 2 = 1| Odd;\n    Even --&gt; Output;\n    Odd --&gt; Output;\n</code></pre>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-4/Exercise-3/#check-if-2-is-in-cnf-dnf-pcnf-and-pdnf","title":"Check if (2) is in CNF, DNF, PCNF and PDNF.","text":"<pre><code>(P (x) \u2227 \u00acQ(x)) \u2228 \u00ac(P (x) \u2228 \u00acQ(x) \u2228 Q(x)) \u2228 (\u00acP (x) \u2227 \u00acQ(x) \u2227 Q(x))\n\u2261(P (x) \u2227 \u00acQ(x)) \u2228 \u00ac(P (x) \u2228 T) \u2228 (\u00acP (x) \u2227 F)\n\u2261P (x) \u2227 \u00acQ(x)\n</code></pre> <p>The given statement is in conjunctive normal form (CNF) which is a conjunction(\u2227) of one or more clauses (P(x) \"\u2227\" \u00acQ(x))</p> <p>Example</p> <p>P(x) \"\u2227\" \u00acQ(x) = CNF</p> <p>P(x) \"\u2228\" \u00acQ(x) = DNF</p> <p>\"(P \u2228 Q)\" \u2227 \"(P \u2228 \u00acQ)\" = PCNF</p> <p>\"(P \u2227 Q)\" \u2228 \"(P \u2227 \u00acQ)\" = PDNF</p> <p>(P \u2228 Q) \u2227 \"(P)\" = CNF because there is no second (clause)</p> <p>(P \u2227 Q) \u2228 \"(P)\" = DNF because there is no second (clause)</p>"},{"location":"1.%20Semester/DTG/Workshops/Workshop-4/Exercise-4/","title":"Exercise 4","text":""},{"location":"1.%20Semester/DTG/Workshops/Workshop-4/Exercise-4/#formulate-a-proof-by-contradiction-that-shows-that-for-all-integers-x-2-the-proposition-p-x-qx-is-false-hence-show-the-following-let-2-be-an-integer-then-x-can-not-be-a-prime-and-gcdx-2-1","title":"Formulate a proof by contradiction that shows that for all integers x &gt; 2 the proposition (P (x) \u2227 \u00acQ(x)) is false. Hence show the following: Let &gt; 2 be an integer. Then x can not be a prime and gcd(x, 2) != 1.","text":"<p>Proof: Assume for the sake of contradiction that there exists an integer x &gt; 2 such that P(x) \u2227 \u00acQ(x) is true. By definition of P(x) and \u00acQ(x), this means that x is a prime and gcd(x, 2) != 1.</p> <p>However, this contradicts the fact that all primes greater than 2 are odd. This is because the only way for gcd(x, 2) to not equal 1 is for x to be even. But if x is even, it cannot be prime. Therefore, the assumption that P(x) \u2227 \u00acQ(x) is true leads to a contradiction and must be false.</p> <p>Hence, we can conclude that for all integers x &gt; 2, x cannot be a prime and gcd(x, 2) != 1.</p>"},{"location":"2.%20Semester/ALG/Lecture-01/","title":"Lecture 01","text":"<p>Algorithms, Correctness, and Efficiency [8 February 2023]</p>"},{"location":"2.%20Semester/ALG/Lecture-01/#lecture-1","title":"Lecture 1","text":"<p>Terms</p> <p>permutation = reordering</p> <p>input/output sequence = list || array</p> <p>n<sub>a</sub> = number of n times a occurs in the sequence</p> <p>T(n) T for time</p> <p>an algorythm must allways have an input and an output</p> <p>Definition</p> <p>an algorithm is said to be correct if, for every input instance, it halts with the correct output. we say that a correct algorythm solves the given computational problem.</p>"},{"location":"2.%20Semester/ALG/Lecture-01/#exercise-1","title":"Exercise 1","text":"<p>Error</p> <p>Exercise 4</p> <p>Solve the following exercises. The exercises that are more involved are marked with a star. If you need some guidance for solving the exercise, place your trash bin in front of your group room\u2019s door and the first available teaching assistant will come to help you out.</p> <p>Exercise 1. Consider the problem of finding the two smallest numbers in a nonempty sequence of numbers \u27e8a1, . . . , an\u27e9 not necessarily sorted.</p> <p>(a) Formalise the above as a computational problem (be careful to precisely define the input, the output, and their relationship).</p> <p>Input: A sequence of numbers of n &gt; 1 numbers not necessarely sorted A = \u27e8a1, a2, ..., an\u27e9</p> <p>Output: A pair of numbers \u27e8b1, b2\u27e9, where b1 and b2 are the two smallest numbers in A and b1 &lt; b2.</p> <p>(b) Write the pseudocode of an algorithm that solves the above computational problem assuming the sequence is given as an array A[1 . . n].</p> <pre><code>def getAndRemoveSmallest(A):          \n    smallest = [maxint, maxint]       \n    for x in A:\n        if x &lt;= smallest[0]\n            smallest.pop(1) # last\n            smallest.append(x,0)  \n\n    return smallest\n\n\nmylist = [a1,a2,a3,..., an]\nprint(getAndRemoveSmallest(mylist))\n</code></pre> <p>(c) Assume that line i of your pseudocode takes constant time ci to execute. What is the worst case running time of your algorithm?</p> <pre><code>def getAndRemoveSmallest(A):         #      \n    smallest = [maxint, maxint]      # c1 = 1\n    for x in A:                      # c2 = n+1\n        if x &lt;= smallest[0]          # c3 = n\n            smallest.pop(1)          # c4 = n~a~\n            smallest.append(x,0)     # c5 = n~a~\n                                     #\n    return smallest                  # c6 = 1\n\n\nmylist = [a1,a2,a3,..., an]\nprint(getAndRemoveSmallest(mylist))\n</code></pre> <p>T(n) = c1 + c2(n+1) + c3(n) + c4(n<sub>a</sub>) + c5(n<sub>a</sub>) + c6</p>"},{"location":"2.%20Semester/ALG/Lecture-01/#exercise-2","title":"Exercise 2","text":"<p>Consider the following pseudocode for the function Find-Element takes as input an array A[1 . . n] and a number a <pre><code>Find-Element(A, a)      #\n1 for i = 1 to A.length #\n2   if A[i] = a         #\n3       return i        #\n4 return i              #\n</code></pre></p> <p>(a) Count the number of iterations of the for loop in the above pseudocode for the execution of Find-Element([1, 0, 5, 2, 4], 5) and report the value returned at the end of the call.</p> <p>the loop will run 3 times and return the index which is 3</p> <p>(b) Is the above algorithm solving the element search problem presented in class? Justify your answer.</p> <p>no as it does not return 0 when not found but the index of last element</p>"},{"location":"2.%20Semester/ALG/Lecture-01/#exercise-3","title":"Exercise 3.","text":"<p>Write a pseudocode of an algorithm to reverse an array of numbers, i.e., the last element should become the first, the second last should become the second, etc. For example, the reverse of [1, 2, 3, 4] is [4, 3, 2, 1].</p> <pre><code>import math\n\ndef reverse_array(arr):\n    for i in range(math.floor(len(arr)/2)):\n        temp = arr[i]\n        arr[i] = arr[len(arr)-i-1]\n        arr[len(arr)-i-1] = temp\n    return arr\n</code></pre> <p>(a) What is the worst-case running time of your algorithm?</p> <p>c1(n/2 floored + 1) + (c2 + c3 + c4)(n/2 floored + 1)  + c5</p> <p>(b) Try now to propose an algorithm that use only a constant amount of extra space. What is the worst-case running time of your algorithm?</p> <p>we already did this from the start</p>"},{"location":"2.%20Semester/ALG/Lecture-01/#exercise-4","title":"Exercise 4.","text":"<p>[CLRS-3, Problem 1\u20131] For each function f(n) and time t in the following table, determine the largest size n of a problem that can be solved in time t, assuming that the algorithm to solve the problem takes f(n) microseconds (1 microsecond = 10\u22126 seconds)</p> <p>alg T(n)=f(n)*10<sup>-6</sup>=1</p> f(n) 1 second 1 minute lg n 2<sup>(10</sup>6) sqrt(n) n lg n n<sup>2</sup> n<sup>3</sup> 2<sup>n</sup> <p>Error</p> <p>we do not know how to solve this</p>"},{"location":"2.%20Semester/ALG/Lecture-01/#exercise-5","title":"Exercise 5","text":"<p>Let A and B be two arrays of numbers sorted in non-decreasing order, respectively of length n and m. Write the pseudocode of an algorithm that checks whether the set of elements in A is equal to the set of elements in B, i.e., all elements of A  re contained in B and vice versa. What is the worst-case running time of your algorithm? <pre><code>def compare(A, B):\n    # is all of A inside of B?\n    for x in A:                # c1 = n+1\n        passed = 0             # c2 = n\n        for i in B:            # c3 = n * m + 1\n            if x &lt; i:          # c4 = n * m\n                passed = 1     # c5 = n \n                break          # c6 = n \n\n            # break out of loop if number is higher\n            elif x &lt; i:        # c7 = n * m ~a~\n                break          # c8 = n\n\n        # break out of loop if number is higher\n        if passed != 1:        # n\n            print(\"Not all of A is contained in B\")\n            return             # 1\n    print(\"all of A is contained in B\")\n\ndef compare2(A,B):\n    # is all of B inside of A?\n    for x in B:\n        passed = 0\n        for i in A:\n            if x == i:\n                passed = 1\n                break\n            elif x &lt; i:\n                break\n\n        if passed != 1:\n            print(\"Not all of B is contained in A\")\n            return\n    print(\"all of B is contained in A\")\n\n\nB= [1,2,3,4,5]    \nA = [1,2,3,4,5,6,7,8]\n\ncompare(A,B)\ncompare2(A,B)\n</code></pre></p> <p>T(n)=2(c1(n+1) + c2 + c3(nm+1) + c4(nm) + c5(n) c6(n) + c7(n*m<sub>a</sub>) + c8(n) + c9(n) + c10)</p>"},{"location":"2.%20Semester/ALG/Lecture-02/","title":"Lecture 02","text":"<p>Insertion sort &amp; Asymptotic notation [15 February 2023]</p> <p>Notice</p> <p>no notes from the lecture</p>"},{"location":"2.%20Semester/ALG/Lecture-02/#exercise-1","title":"Exercise 1.","text":"<p>CLRS-3 3.1\u20131 Let f(n) and g(n) be asymptotically nonnegative functions. Using the basic definition of \u0398-notation, prove that max(f(n), g(n)) = \u0398(f(n) + g(n)). Remark: A function f(n) is asymptotically nonnegative if there exists n0 such that f(n) 0 for all n \u2265 n0</p> <p>f(n) and g(n) = asymptotically nonnegative functions max(f(n), g(n)) = \u0398(f(n) + g(n))</p> <p>because the definiton of \u0398 is asymptotically tightbound, if we max the function we would just reach \u0398</p> <p>Solution 1. CLRS-3 3.1\u20131 Let f(n) and g(n) be asymptotically nonnegative functions. Using the basic definition of \u0398 notation, prove that max(f(n), g(n)) = \u0398(f(n) + g(n)). We have to prove that there exists c1, c2 &gt; 0, and n0 such that 0 \u2264 c1(f(n) + g(n)) \u2264 max(f(n), g(n)) \u2264 c2(f(n) + g(n)) for all n \u2265 n0. We know that f(n) and g(n) are asympototically nonnegative, then we can choose n0 &gt; 0 such that f(n) \u2265 0 and g(n) \u2265 0 for all n \u2265 n0. Let c1 = 1/2, c2 = 1, and n \u2265 n0. On the one hand, we have that max(f(n), g(n)) \u2264 f(n)+g(n) because the max of two nonnegative numbers is always smaller than their sum. On the other hand, we have 1/2(f(n)+g(n)) \u2264 max(f(n), g(n)) because the average of two numbers is always less than or equal to the maximum of the two.</p> <p>CLRS-3 3.1\u20134 Is 2<sup>n+1</sup> = =(2n)? Is 2<sup>2n</sup> = O(2n)?</p> <p>2<sup>n+1</sup> = \u0398(2n) yes because its just 2n since the +1 doesnt matter for \u0398.</p> <p>2<sup>2n</sup> = O(2n) is not true because 2<sup>2</sup> = 4 so it would be O(4)</p>"},{"location":"2.%20Semester/ALG/Lecture-02/#exercise-2","title":"Exercise 2.","text":"<p>Consider the algorithm SumUpTo that takes as input a natural number n \u2208 N.</p> <pre><code>def SumUpTo(n):\n    s = 0\n    for (i + 1) in range(n):\n        s = s + i\n\n    return s\n</code></pre> <p>Use the technique of loop invariants to prove that, given n \u2208 N, SumUpTo terminates and returns (n* (n+1)) / 2</p> <p>Initialisation: s is always 0 if n is 0 as the loop does not run</p> <p>Maintenance: for each itteration is executes  s = s + i which means it runs n times and adds the current n at every step to it</p> <p>Termination: it terminates at i<sub>n</sub> = n and returns (n* (n+1)) / 2</p>"},{"location":"2.%20Semester/ALG/Lecture-02/#exercise-3","title":"Exercise 3.","text":"<p>By getting rid of the asymptotically insignificant parts on the expressions, give a simplified asymptotic tight bounds (big-theta notation) for the following functions in n. Here, k \u2265 1, e &gt; 0 and c &gt; 1 are constants.</p> <ul> <li>0.001n<sup>2</sup> + 70000n = # \u0398(n<sup>2</sup>)</li> <li>2<sup>n</sup> + n<sup>10000</sup> = # \u0398(n<sup>2</sup>)</li> <li>n<sup>k</sup> + c<sup>n</sup> = # \u0398(c<sup>n</sup>)</li> <li>logk n + n<sup>e</sup> = # \u0398(n<sup>e</sup>)</li> <li>2<sup>n</sup> + 2<sup>n/2</sup> = # \u0398(2<sup>n</sup>)</li> <li>n<sup>log</sup> <sup>c</sup> + c<sup>log</sup> <sup>n</sup> # they cancel eachother out so they are the same.</li> </ul> <p>(hint: look at some properties of the logarithm at CLRS-3 p. 56 or CLRS-4 p. 66)</p>"},{"location":"2.%20Semester/ALG/Lecture-06/","title":"Lecutre 06","text":""},{"location":"2.%20Semester/ALG/Lecture-06/#exercise-1","title":"Exercise 1","text":"<p>in class we have seen that using arrays for implementing stack may lead to underflow and overflow problems. Propose an alternative implementation of the stack operations Stack-Empty, Push and, Pop that make use of doubly linked lists to implement a stack. What is the worst-case running time for the Pop and Push operations? May we still incur in situations where the stack underflows or overflows?</p> <p>non modified code <pre><code>Stack-Empty(S):\n    if(S.top == 0)\n        return true\n    else\n        return false\n\nPush(S,x)\n    S.top = S.top+1\n    S[S.top] = x\n\n\nPop(S):\n    if(Stack-Empty(S))\n        error \"underflow\"\n    else\n        S.top= S.top -1\n        return S[S.top+1]\n</code></pre></p> <p>Rewritten for doubly linked lists: <pre><code>def Stack_Empty(S)\n    if(S.Head != null)\n        return true\n    else\n        return false\n\ndef Push(S,x)\n    x.next = S.Head;\n    x.previous = null\n    S.Head = x\n\n\n\ndef Pop(S)\n    free(S.head)\n    S.head = S.head.next\n    S.head.prev = null\n</code></pre></p>"},{"location":"2.%20Semester/ALG/Lecture-06/#exercise-2","title":"exercise 2","text":"<p>(a) [CLRS-3 10.4-2] Write an O(n)-time recursive procedure that, given an n-node binary tree, prints out the key of each node in the tree. <pre><code>class TreeNode:\n    def __init__(self, key, parent=None, sibling=None, child=None):\n        self.parent = parent\n        self.key = key\n        self.sibling = sibling\n        self.child = child\n\n\n\n\ndef printTee(node):\n    if node is None:\n        return\n    print(node.key)\n\n    printTee(node.sibling)\n    printTee(node.child)\n\n\nroot = TreeNode(1)\nroot.child = TreeNode(2)\nroot.sibling = TreeNode(3)\nroot.child.child = TreeNode(4)\nroot.child.sibling = TreeNode(5)\n\nprintTee(root)\n</code></pre></p> <p>(b) [CLRS-3 10.4-3] Write an O(n)-time nonrecursive procedure that, given an n-node binary tree, prints out the key of each node in the tree. Use a stack as an auxiliary data structure.</p> <pre><code>class TreeNode:\n    def __init__(self, key, left=None, right=None):\n        self.key = key\n        self.left = left\n        self.right = right\n\ndef printTree(node):\n    if root is None:\n        return\n\n    stack = [root]\n\n    while stack:\n        # Pop the top item from the stack and print its key\n        if node is not None:\n            print(node.key)\n            stack.append(node.right)\n            stack.append(node.left)\n        # Push the right child first, then the left child to the stack\n        node = stack.pop()\n\n\nroot = TreeNode(1)\nroot.left = TreeNode(2)\nroot.right = TreeNode(3)\nroot.left.left = TreeNode(4)\nroot.left.right = TreeNode(5)\n\nprintTree(root)\n</code></pre>"},{"location":"2.%20Semester/ALG/Lecture-06/#exercise-3","title":"Exercise 3.","text":"<p>Singly linked lists are a variant of linked lists where each element x has two attributes, x.key that stores the key, and x.next that points to the next element in the list. Can you implement the dynamic-set operation Insert on a singly linked list in O(1) time? How about Delete?</p> <pre><code>List_insert(L,x)\n    x.next = L.head\n    L.head = x\n</code></pre> <p>Aim to skip the x element in the single linked list <pre><code>List_delete_(L,x)\n    if x.next == null\n        normal_List_delete(L,x) //a funtion that finds the last element and set the next last pointer to null\n    else\n        n = x.next \n        x.key = n.key \n        x.next = n.next\n</code></pre></p>"},{"location":"2.%20Semester/ALG/Lecture-06/#exercise-4","title":"Exercise 4","text":"<p>Give a \u0398(n)-time nonrecursive procedure that reverses a singly linked list of n elements by updating its pointers. The procedure should use no more than constant storage beyond that needed for the list itself.</p> <pre><code>class listt:\n    def __init__(self):\n        self.next = None\n\n\ndef reverse_list(L):\n    prev = None\n    current = L.head\n\n    while current:\n        next_node = current.next\n        current.next = prev\n        prev = current\n        current = next_node\n\n    L.head = prev\n</code></pre>"},{"location":"2.%20Semester/ALG/Lecture-06/#exercise-5","title":"Exercise 5","text":"<p>Implement a queue by a singly linked list Q. The operations Enqueue and Dequeue should still take O(1) time. Hint: You can assume that in addition to the usual attribute Q.head, pointing to the head of the list, the list Q has also the attribute Q.tail which points to the last element of the linked list.</p>"},{"location":"2.%20Semester/ALG/lecture-03/","title":"Lecture 03","text":"<p>Divide &amp; conquer</p> <p>divide problem into a number of disjoint subproblems that are smaller instances of same problem</p> <p>Conquer the subproblem by solving them recursively. If the subproblem is small (and easy) enough solve it trivially </p> <p>Combine the solution of the subproblems into the solution for the original problem</p> <p>else it can be trivial to solve</p>"},{"location":"2.%20Semester/ALG/lecture-03/#exercise-1","title":"exercise 1","text":"<p>Consider the array A = [3, 41, 52, 26, 38, 57, 49, 9]. Give the state of the array after five sub-calls of the algorithm Merge are performed during the execution of the call Merge-Sort(A, 1, 8).</p> <p>A = [3, 26, 41, 52, 38, 57, 9, 49]</p>"},{"location":"2.%20Semester/ALG/lecture-03/#exercise-2","title":"exercise 2","text":"<p>CLRS-3 2.3\u20133. Use mathematical induction to show that when n is an exact power of 2 (that is, n = 2k for some k \u2208 N  {0}), the solution of the following recurrence is T(n) = n lg n</p> <p>n = 2k</p> <p>CLRS-3 2.3\u20134. We can express insertion sort as a recursive procedure as follows. In order to sort A[1 . . n], we recursively sort A[1 . . n \u2212 1] and then insert A[n] into the sorted array A[1 . . n \u2212 1]. Write a recurrence for the worst-case running time of this  recursive version of insertion sort.</p> <p>CLRS-3 2.3\u20136. Observe that the while loop of lines 5\u20137 of the Insertion-Sort procedure uses a linear search to scan (backward) through the sorted subarray A[1 . . j \u2212 1]. Can we use a binary search instead to improve the overall worst-case running time of  insertion sort to \u0398(n lg n)?</p> <p>no as in worse case scenario you still need to shift all bigger elements one to the right.</p>"},{"location":"2.%20Semester/ALG/lecture-03/#exercise-3","title":"exercise 3","text":"<p>Consider the problem of finding the smallest element in a nonempty array of numbers A[1 . . n]</p> <p>(a) Write an incremental algorithm that solves the above problem and determine its asymptotic worst-case running time.</p> <p><pre><code>def find_smallest(A):\n    smallest = A[0]   # initialize smallest to the first element in A\n    for i in range(1, len(A)):   # iterate through the remaining elements in A\n        if A[i] &lt; smallest:   # if the current element is smaller than the current smallest\n            smallest = A[i]   # update smallest to the current element\n    return smallest\n</code></pre> The worst-case running time of this algorithm is O(n), since it has to iterate through all n elements in the array at least once in every case.</p> <p>(b) Write a divide-and-conquer algorithm that solves the above problem and determine its asymptotic worst-case running time. <pre><code>import math\n\ndef find_smallest(A,p,q):\n    if q&lt;= p:\n        return A[p]\n    else:\n        m = math.floor((p+q)/2)\n        minL = find_smallest(A,p,m)\n        minR = find_smallest(A,m+1,q)\n        return min(minL,minR)\n</code></pre> in worst case it is still O(n) assuming we only have 1 thead to work with, if we had 2 then it would be twice as fast O(n/2).</p> <p>(c) Assume that the length of A is a power of 2. Write a recurrence describing how many comparison operations (among elements of A) your divide-and-conquer algorithm performs, and solve the recurrence using the recursion-tree method. Remark: count ONLY the comparisons performed among elements in A. E.g., a comparison like i \u2264 A.length shall not be counted, whereas A[i] \u2264 k where k is a variable storing some element of A shall be counted. Moreover, if you use expressions like min(A[i], A[j]) for some indices i, j, that also counts as 1 comparison.</p>"},{"location":"2.%20Semester/ALG/lecture-04/","title":"Lecture 04","text":"<p>the divide and conquer is used for reoccurences else known as recursive functions</p> <p>3 different methods</p> <p>Substitution</p> <p>gues the form of the solution first then use mathematical induction to prove the solution can be used to find constants</p> <p>Recursion-tree</p> <p>Master</p>"},{"location":"2.%20Semester/ALG/lecture-04/#exercise-1","title":"Exercise 1","text":"<p>Consider the following recurrence T(n) = T(2n/3) + \u0398(1). Prove that T(n) = O(lg n).</p> <p>a = 1</p> <p>b = 3/2</p> <p>d = 0</p> <p>log<sub>3/2</sub>(1) == 0</p> <p>O(n<sup>d</sup> lg n) == O(n<sup>0</sup> lg n)  == O(lg n)</p>"},{"location":"2.%20Semester/ALG/lecture-04/#exercise-2","title":"Exercise 2","text":"<p>Consider the following recurrence</p> <p><pre><code>T(n) =  {\n        {    \u0398(1)                if n = 1\n        {    T(n \u2212 1) + \u0398(n)     if n &gt; 1   \n        {\n</code></pre> Prove that T (n) = O(n<sup>2</sup>) using the substitution method.</p> <p>guess == O(n^2)</p> <p>c =</p> <p>n<sub>0</sub> &gt; 1</p> <p>T(n \u2212 1) + \u0398(n) </p> <p>&lt;= c(n-1)<sup>2</sup> * b*n</p> <p>we assume b &lt;= c</p> <p>&lt;= c(n-1)<sup>2</sup> * cn </p> <p>== cn<sup>2</sup> \u2212 2cn + c + cn</p> <p>we assume c &lt;= cn </p> <p>&lt;= cn<sup>2</sup> \u2212 2cn + cn + cn </p> <p>==  cn<sup>2</sup></p>"},{"location":"2.%20Semester/ALG/lecture-04/#exercise-3","title":"exercise 3","text":"<p>Consider the following recurrence:</p> <p><pre><code>T(n) =  {\n        { \u0398(1)                             if n \u2264 1\n        { T(\u230an/2\u230b) + T(\u2308n/2\u2309 \u2212 1) + \u0398(n)     if n &gt; 1\n        {\n</code></pre> Use the substitution method to prove that T(n) = O(n lg n).</p> <p>n<sub>0</sub> &gt; 1</p> <p>T(\u230an/2\u230b) + T(\u2308n/2\u2309 \u2212 1) + \u0398(n)</p> <p>==T(\u230an/2\u230b) + T(\u2308n/2\u2309 \u2212 1) + bn</p>"},{"location":"2.%20Semester/ALG/lecture-05/","title":"Lecture 05","text":"<pre><code>l = Left(i)\nr = Right(i)\nif l \u2264 A.heap-size and A[l] &lt; A[i]:\n    smallest = l\nelse:\n    smallest = i\nif r \u2264 A.heap-size and A[r] &lt; A[smallest]:\n    smallest = r\n\nif smallest != i:\n    exchange A[i] with A[smallest]\n    Max-Heapify(A, smallest)\n</code></pre>"},{"location":"2.%20Semester/ALG/lecture-05/#exercise-1","title":"exercise 1","text":"<p>Exercise 1. Consider the Max-Heapify procedure as defined below.</p>"},{"location":"2.%20Semester/ALG/lecture-05/#base-case","title":"base case","text":"<p>A = [1]</p> <p>it checks but fails at all if statements because l and r are both out of range and largest is equals i which lets the recursive function exit.</p>"},{"location":"2.%20Semester/ALG/lecture-05/#inductive-step","title":"inductive step:","text":"<p>A = [1, 2] // remember it sorts backwards A = [2, 1]</p> <p>here the left check completes and sets largest = l which then inturn allows the largest != i to run which swaps the location of i and largest, then the function runs again and it completes without any cases being true which then breaks us out of the recursion.</p>"},{"location":"2.%20Semester/ALG/lecture-05/#the-last-step","title":"the last step","text":"<p>A = [1, 3, 2, n4.......nx] // remember it sorts backwards</p>"},{"location":"2.%20Semester/ALG/lecture-05/#exercise-2","title":"exercise 2","text":"<p>Starting with the procedure Max-Heapify, write pseudocode for the procedure Min-Heapify(A, i), which performs the corresponding manipulation on a min-heap. How does the running time of MinHeapify compare to that of Max-Heapify?</p> <pre><code>l = Left(i)\nr = Right(i)\nif l \u2264 A.heap-size and A[l] &lt; A[i]:\n    smallest = l\nelse:\n    smallest = i\nif r \u2264 A.heap-size and A[r] &lt; A[smallest]:\n    smallest = r\n\nif smallest != i:\n    exchange A[i] with A[smallest]\n    Max-Heapify(A, smallest)\n</code></pre>"},{"location":"2.%20Semester/ALG/lecture-05/#exercise-3","title":"exercise 3","text":"<p>Consider the pseudocode of the Partition procedure.</p> <pre><code>def Partition(A, p, r):\n    x = A[r]\n    i = p \u2212 1\n    for j = p to r \u2212 1:\n        if A[j] &gt;= x:\n            i = i + 1\n            exchange A[i] with A[j]\n    exchange A[i + 1] with A[r]\n    return i + 1\n</code></pre> <p>Assume that all elements in the array A[p . . r] are equal, that is, A[p] = A[p + 1] = \u00b7 \u00b7 \u00b7 = A[r]. What value will Partition(A, p, r) return? How does Quicksort perform on arrays that have the same value compared with Insertion-Sort and Mergesort?</p> <p>Quicksort: In this scenario, Quicksort performs poorly, as the Partition function will always return an index close to the end of the array, leading to a highly unbalanced partitioning. This results in a worst-case time complexity of O(n^2) for Quicksort.</p> <p>Insertion-Sort: Insertion-Sort performs well on this type of input, as it has an adaptive nature. When all elements are equal, it will only take linear time, O(n), to sort the array.</p> <p>Mergesort: Mergesort has a stable time complexity of O(n log n) regardless of the input. While it doesn\u2019t perform as well as Insertion-Sort on this input</p>"},{"location":"2.%20Semester/ALG/lecture-05/#exercise-4","title":"exercise 4","text":"<p>Modify the pseudocode of the Partition procedure so that the Quicksort algorithm will sort in nonincreasing order. Argument about the correctness of your solution.</p> <p>Consider the pseudocode of Counting-Sort <pre><code>def counting_sort(A, k):\n    n = len(A)\n    B = [0] * n\n    C = [0] * (k + 1)\n\n    for i in range(n):\n        C[A[i]] += 1\n\n    for i in range(1, k + 1):\n        C[i] = C[i] + C[i - 1]\n\n    for j in range(n - 1, -1, -1):\n        B[C[A[j]] - 1] = A[j]\n        C[A[j]] -= 1\n\n    return B\n</code></pre> <pre><code>Counting-Sort(A, B, k)\n1 let C[0 . . k] be a new array\n2 for i to k\n3   C[i] = 0\n4 for j = 1 to A.length\n5   C[A[j]] = C[A[j]] + 1\n6 for i = 1 to k\n7   C[i] = C[i] + C[i \u2212 1]\n8 for j = A.length downto 1\n9   B[C[A[j]]] = A[j]\n10  C[A[j]] = C[A[j]] \u2212 1\n</code></pre> Modify the above pseudocode by replacing the for-loop header in line 8 as 8 for j = 1 to A.length Is the modified algorithm correct? Is it also stable? Justify your answers (not necessarily by providing a formal proof).</p> <p>The modified algorithm is still correct in the sense that it will produce a sorted output. However, the algorithm is no longer stable. The reason for this is that by iterating from the beginning to the end of the input array A in line 8, we are processing the elements in their original order. When multiple elements with the same value are encountered, they will be placed in the output array B in the same order they were processed, which means that they will be placed in reverse order of their original appearance in A. This breaks the stability of the algorithm.</p>"},{"location":"2.%20Semester/ALG/lecture-07/","title":"Lecture 07","text":""},{"location":"2.%20Semester/ALG/lecture-07/#exercise-1","title":"exercise 1","text":"<p>[CLRS-3 11.1-1] Suppose that a dynamic set S is represented by a direct-address table T of length m. Describe a procedure that finds the maximum element of S . What is the worst-case performance of your procedure?</p> <p>To find the highest element of S you would look at it from behind till you find an element.</p> <p>worse case O(m) as you would need to check every cell.</p>"},{"location":"2.%20Semester/ALG/lecture-07/#exericise-2","title":"exericise 2","text":"<p>[CLRS-3 11.2-2] Demonstrate what happens when one inserts the keys 5; 28; 19; 15; 20; 33; 12; 17; 10 into a hash table with collisions resolved by chaining. Let the table have 9 slots, and let the hash function be h(k) = k mod 9.</p> <pre><code>\ngraph LR\n    n0[\"[0] null\"]\n    n1(\"[1] --&gt; 10\") --&gt; n1_2(19) --&gt; n1_1(28)\n    n2(\"[2] --&gt; 20\")\n    n3(\"[3] --&gt; 12\")\n    n4[\"[4] null\"]\n    n5(\"[5] --&gt; 5\")\n    n6(\"[6] --&gt; 33\") --&gt; n6_1(15)\n    n7(\"[7] null\")\n    n8[\"[8] --&gt; 17\"]\n\n    table[Hash Table] --&gt; n0\n    table --&gt; n1\n    table --&gt; n2\n    table --&gt; n3\n    table --&gt; n4\n    table --&gt; n5\n    table --&gt; n6\n    table --&gt; n7\n    table --&gt; n8\n</code></pre>"},{"location":"2.%20Semester/ALG/lecture-07/#exercise-3","title":"exercise 3","text":"<p>[CLRS-3 11.4-1] Consider inserting the keys 10; 22; 31; 4; 15; 28; 17; 88; 59 into a hash table of length m = 11 using open addressing with the auxiliary function h \u2032(k) = k. Illustrate the result of inserting these keys using linear probing, using quadratic probing with c1 = 1 and c2 = 3, and using double hashing with h1(k) = k and h2(k) = 1 + (k mod (m \u2212 1)).</p>"},{"location":"2.%20Semester/ALG/lecture-07/#exercise-4","title":"exercise 4","text":"<p>[CLRS-3 11.4-3] Consider an open-address hash table with uniform hashing. Give upper bounds on the expected number of probes in an unsuccessful search and on the expected number of probes in a successful search when the load factor is 3/4 and when it is 7/8.</p> <p>Teachers</p> <p>By Theorem 11.6 in CLRS, the expected number of probes in an unsuccessful search is bounded by 1/(1 \u2212 \u03b1). Thus, for \u03b1 = 3/4 we have 1/(1 \u2212 \u03b1) = 4, and for \u03b1 = 7/8 we have 1/(1 \u2212 \u03b1) = 8. By Theorem 11.8 in CLRS, the expected number of probes in a successful search is bounded by(1/\u03b1) ln(1/1 \u2212 \u03b1). Hence, for \u03b1 = 3/4 we have (1/\u03b1) ln(1/1 \u2212 \u03b1) = (4/3) ln 4 \u223c= 1.85, and for \u03b1 = 7/8 we have (1/\u03b1) ln(1/1 \u2212 \u03b1) = (8/7) ln 8 \u223c= 2.38.</p>"},{"location":"2.%20Semester/ALG/lecture-08/","title":"Lecture 08","text":""},{"location":"2.%20Semester/ALG/lecture-08/#exercise-1","title":"exercise 1","text":"<p>(CLRS 12.3-1) Implement a recursive variant of the Tree-Insert procedure.</p> <pre><code>Tree-Insert(T,z)\ny = NIL\nx = T.root\nwhile x != NIL\n    y = x\n    if z.key &lt; x.key\n        x = x.left\n    else \n        x = x.right\nz.p = y\nif y == NIL\n    T.root = z\nelseif z.key &lt; y.key\n    y.left = z\nelse y.right = z\n</code></pre> <p>Warning</p> <p>gpt output</p> <pre><code>class TreeNode:\n    def __init__(self, key):\n        self.key = key\n        self.left = None\n        self.right = None\n        self.parent = None\n\nclass BinaryTree:\n    def __init__(self):\n        self.root = None\n\n    def tree_insert(self, z):\n        self.root = self._tree_insert_recursive(self.root, None, z)\n\n    def _tree_insert_recursive(self, x, y, z):\n        if x is None:\n            z.parent = y\n            return z\n        if z.key &lt; x.key:\n            x.left = self._tree_insert_recursive(x.left, x, z)\n        else:\n            x.right = self._tree_insert_recursive(x.right, x, z)\n        return x\n</code></pre>"},{"location":"2.%20Semester/ALG/lecture-08/#exercise-2","title":"exercise 2","text":"<p>(CLRS 12.3-3) We can sort a sequence of n numbers by iteratively inserting each number in a binary search tree and then performing an inorder tree walk. Write the pseudocode of this algorithm. What are the worst-case and best-case running times for this sorting algorithm? Here's the pseudocode for sorting a sequence of n numbers using binary search tree insertion and inorder tree walk:</p> <p>Warning</p> <p>gpt output</p> <pre><code>Sort-Sequence(A)\n1. Create an empty binary search tree T\n2. for i = 1 to length(A)\n3.     Create a new TreeNode with key A[i]\n4.     Tree-Insert(T, new TreeNode)\n5. Perform Inorder-Tree-Walk(T.root)\n</code></pre> <p>To perform the Inorder-Tree-Walk:</p> <pre><code>Inorder-Tree-Walk(x)\n1. if x != NIL\n2.     Inorder-Tree-Walk(x.left)\n3.     print(x.key)\n4.     Inorder-Tree-Walk(x.right)\n</code></pre> <p>The running time of this sorting algorithm depends on the height of the binary search tree:</p> <ol> <li> <p>Best-case: The best-case scenario occurs when the binary search tree is perfectly balanced, and the height of the tree is log(n). In this case, both the insertion and inorder tree walk operations take O(log(n)) time, and since we perform these operations for n elements, the total running time is O(n*log(n)).</p> </li> <li> <p>Worst-case: The worst-case scenario occurs when the binary search tree becomes completely unbalanced, degenerating into a linked list. This can happen when the input sequence is already sorted or reverse sorted. In this case, the height of the tree is n, and the insertion operation takes O(n) time. As we perform this operation for n elements, the insertion part takes O(n^2) time. The inorder tree walk takes O(n) time. Thus, the total worst-case running time is O(n^2).</p> </li> </ol> <p>In summary, the best-case running time for this sorting algorithm is O(nlog(n)), and the worst-case running time is O(n^2). It's important to note that using a self-balancing binary search tree (like AVL tree or red-black tree) would guarantee a balanced tree, resulting in a consistently O(nlog(n)) time complexity for sorting.</p>"},{"location":"2.%20Semester/ALG/lecture-08/#exercise-3","title":"exercise 3","text":"<p>Consider the binary search tree T depicted in Figure 1. Delete the node with key = 10 from T by applying the procedure Tree-Delete(T, z) as described in CLRS</p>"},{"location":"2.%20Semester/ALG/lecture-08/#exercise-4","title":"exercise 4","text":"<p>Show the red-black trees that result after successively inserting the keys 41; 38; 31; 12; 19; 8 into an initially empty red-black tree.</p>"},{"location":"2.%20Semester/ALG/lecture-08/#exercise-5","title":"exercise 5","text":"<p>Consider the red-black tree T depicted in Figure 2. Insert first a node with key = 15 in T, then delete the node with key = 8. Show all the intermediate transformations of the red-black tree with particular emphasis on the rotations.</p>"},{"location":"2.%20Semester/Interneworking-and-web-programming/lecture-1/","title":"1. Internet and Web-programming.","text":"<ul> <li>Internet/Network (dns, ips, bluetooth, transfer protocols)</li> <li>Web programming (js, browsers, api)</li> </ul>"},{"location":"2.%20Semester/Interneworking-and-web-programming/lecture-1/#moodle-page","title":"Moodle page:","text":"<p>https://www.moodle.aau.dk/course/view.php?id=46692#section-1</p>"},{"location":"2.%20Semester/Interneworking-and-web-programming/lecture-1/#basic-intro","title":"Basic intro","text":"<ul> <li>Security is an huge ongoing issue.</li> <li>Time to get a package from a remote server is way slower than getting something from a local network, and both your own and a local computer is way faster at making calculations compared to something in a remote location.</li> <li>Most systems are built using a backend and front end system.</li> <li>HTML5, CSS, and JavaScript<ul> <li>HTML5 is a markup language used to structure and display content on the web. </li> <li>CSS is a stylesheet language used to specify the look and layout of web content. </li> <li>JavaScript is a programming language used to add interactivity and dynamic behavior to web pages. </li> </ul> </li> </ul> <pre><code>graph TD\nA(Server 1) &lt;--&gt; B(Computer 1)\nA(Server 1) &lt;--&gt; C(Computer 2)\nA(Server 1) &lt;--&gt; E(Computer 3)\n</code></pre>"},{"location":"2.%20Semester/Interneworking-and-web-programming/lecture-1/#let-vs-var","title":"let vs var","text":"<p>In JavaScript, var and let are used to declare variables, but they have some differences in scope and hoisting:</p> <ol> <li> <p>Scope: var variables have function scope, which means they are accessible within the entire function in which they are declared. On the other hand, let and const variables have block scope, which means they are only accessible within the block in which they are declared.</p> </li> <li> <p>Hoisting: Variables declared with var are hoisted to the top of their scope, which means that they are accessible before they are declared in the code. let and const variables are not hoisted, which means that they are only accessible within the block in which they are declared and not before.</p> </li> </ol> <p>Scope example: <pre><code>// Block scope example\nif (true) {\n  let blockScopeVariable = \"I am block scoped\";\n  console.log(blockScopeVariable); // \"I am block scoped\"\n}\nconsole.log(blockScopeVariable); // ReferenceError: blockScopeVariable is not defined\n\n// Function scope example\nfunction myFunction() {\n  var functionScopeVariable = \"I am function scoped\";\n  console.log(functionScopeVariable); // \"I am function scoped\"\n}\nmyFunction();\nconsole.log(functionScopeVariable); // ReferenceError: functionScopeVariable is not defined\n</code></pre></p>"},{"location":"2.%20Semester/Interneworking-and-web-programming/lecture-1/#important-reminders","title":"Important Reminders.","text":""},{"location":"2.%20Semester/Interneworking-and-web-programming/lecture-1/#terms","title":"Terms","text":"<ul> <li>browser = user-agent</li> <li>Client = Front-end</li> <li>Server-side = Back-end</li> <li>localhost ip = 127.0.0.1:%port%</li> </ul>"},{"location":"2.%20Semester/Interneworking-and-web-programming/lecture-1/#notes","title":"Notes","text":"<p>requests are made using HTTP protocol webpages can be modified both css html and js at run time</p>"},{"location":"2.%20Semester/Interneworking-and-web-programming/lecture-2/","title":"Lecture 2","text":""},{"location":"2.%20Semester/Interneworking-and-web-programming/lecture-2/#js-functions-objects","title":"JS functions &amp; objects","text":"<p>function normal \"funktions erkl\u00e6ring\" <pre><code>function name(para){\n    console.log(para);\n}\nname(\"diego\");\n</code></pre> function let \"funktions udtryk (anonymt)\"</p> <p>prints entire function in this case change name to function call to run function <pre><code>let name = function (para){\n    console.log(para);\n}\nconsole.log(name);\n</code></pre> arrow function \"pile-funktioner\" <pre><code>let name = (para)=&gt;{\n    console.log(para);\n}\nname(\"diego\");\n</code></pre> if one param paranthesis optional will return if only statement. <pre><code>const increment = a =&gt; a+1;\n\nconsole.log(increment(5));\n</code></pre></p> <p>call-back <pre><code>document.addEventListener(\"click\",doMyStuff);\n</code></pre></p> <p>object serialisering is making an object into a flad (bit streng)</p>"},{"location":"2.%20Semester/Interneworking-and-web-programming/lecture-3/","title":"lecture 3","text":""},{"location":"2.%20Semester/Interneworking-and-web-programming/lecture-3/#html-http-forms-css","title":"HTML, HTTP, Forms, CSS","text":"<p>http://www.funwebdev.com/index.php?page=17#article</p> <p>http = Protocol</p> <p>www.funwebdev.com = domain</p> <p>/index path</p> <p>?page=17 query string page is a key 17 is a value. &amp; seperates different queries</p> <p>#article fragment <pre><code>&lt;body id=\"test\"&gt;testing&lt;/body&gt; &lt;!--body is element name\n and id=\"test\" is attribute testing is content \n empty element is an element with no content--&gt;\n</code></pre></p> <p>Nesting_definitions</p> <p>siblings</p> <p>descendants</p> <p>ancestors</p> <p>parents</p> <p>children</p> <p><pre><code>&lt;datalist&gt; &lt;!--optional select?--&gt;\n</code></pre> HTML needs to be sementic</p> <p>Response_codes</p> <p>100-199 information answer</p> <p>200-299 success</p> <p>300-399 redirect</p> <p>400-499 client error</p> <p>500-599 server error</p> <p>not in lecture but html math <pre><code>    &lt;p&gt;bmi=\n        &lt;math display=\"inline\"&gt;\n            &lt;mfrac&gt;\n                &lt;msup&gt;\n                    &lt;mn&gt;weight&lt;/mn&gt;\n                &lt;/msup&gt;\n                &lt;mn&gt;height&lt;/mn&gt;\n            &lt;/mfrac&gt;\n        &lt;/math&gt;\n    &lt;/p&gt;\n</code></pre></p>"},{"location":"2.%20Semester/SLIAL/Lecture1/","title":"Lecture1","text":""},{"location":"2.%20Semester/SLIAL/Lecture1/#stuff","title":"stuff","text":"<ul> <li>numbers will also be called scalars</li> <li> <p>vectors are denoted with lower case</p> </li> <li> <p>Zero vecotr vector of multiple 0</p> </li> <li>ones vector vector of multiple 1</li> <li>e<sub>i</sub> vector 0 with a singular 1 somewhere? vector with vectors within is called a list of vectors # could also be a matrix</li> </ul>"},{"location":"2.%20Semester/SLIAL/Lecture1/#vectors-of-the-same-length-can-be-added-to-each-other-making-a-new-vector-with-added-together-values","title":"vectors of the same length can be added to each other making a new vector with added together values.","text":"<pre><code>import numpy as np\n\nvector1 = np.array([1, 2, 3])\nvector2 = np.array([4, 5, 6])\n\nresult = vector1 + vector2\n\nprint(result)\n\n# Output:\n# [5 7 9]\n</code></pre>"},{"location":"2.%20Semester/SLIAL/Lecture1/#vectors-of-the-same-length-can-be-substracted-to-each-other-making-a-new-vector-with-substracted-together-values","title":"vectors of the same length can be substracted to each other making a new vector with substracted together values.","text":"<pre><code>import numpy as np\n\nvector1 = np.array([1, 2, 3])\nvector2 = np.array([4, 5, 6])\n\nresult = vector1 - vector2\n\nprint(result)\n\n# Output:\n# [-3 -3 -3]\n</code></pre>"},{"location":"2.%20Semester/SLIAL/Lecture1/#you-can-multiple-vector-with-a-scalar","title":"you can multiple vector with a scalar.","text":"<pre><code>import numpy as np\n\nvector = np.array([1, 2, 3])\nscalar = 2\n\nresult = vector * scalar\n\nprint(result)\n\n# Output:\n# [2 4 6]\n</code></pre>"},{"location":"2.%20Semester/SLIAL/Lecture1/#here-is-an-example-of-a-linear-combination-of-numpy-vectors-in-python","title":"Here is an example of a linear combination of numpy vectors in Python:","text":"<p><pre><code>import numpy as np\n\nvector1 = np.array([1, 2, 3])\nvector2 = np.array([4, 5, 6])\n\ncoeff1 = 2\ncoeff2 = 3\n\nresult = coeff1 * vector1 + coeff2 * vector2\n\nprint(result)\n\n# Output:\n# [10 21 36]\n</code></pre> In this example, two vectors vector1 and vector2 are combined linearly using two scalar coefficients coeff1 and coeff2. The result is a new vector result with the same shape as the input vectors, equal to the sum of the scaled input vectors. The linear combination can be written mathematically as result = coeff1 * vector1 + coeff2 * vector2.</p>"},{"location":"2.%20Semester/SLIAL/Lecture1/#we-need-product-thingy-written-down","title":"we need product thingy written down","text":"<p>we can try to make sense of this in exercises</p>"},{"location":"2.%20Semester/SLIAL/Lecture1/#same-with-differencing-and-sum-oand-average","title":"same with \"differencing\" and \"sum oand average\"","text":""},{"location":"2.%20Semester/SLIAL/Lecture1/#superposition-property-else-known-as-linear-functions","title":"superposition property else known as linear functions","text":"<p>means that you can move fx addition outside of the function and still get the same</p> <p>a linear function to which you add a constant is called affine. affine functions do not cross 0x and 0y but linear does affine functions are linear functions offset</p>"},{"location":"2.%20Semester/SLIAL/workshops/workshop-1/","title":"Workshop 1","text":""},{"location":"2.%20Semester/SLIAL/workshops/workshop-1/#polynomial-interpolation","title":"Polynomial interpolation","text":"<p>We begin with polynomial interpolation, where the goal is to find a polynomial passing through some datapoints. The resulting polynomial may be used for evaluating the model between datapoints, which is known as the interpolation of the data, or  lsewhere, which is typically referred to as the extrapolation. Consider a dataset given by n pairs of real numbers</p> <p>(t1, y1), (t2, y2), . . . , (tn, yn), </p> <p>which we interpret as n points in R<sup>2</sup>. Our underlying assumption is going to be that for all i = 1, . . . , n, j = 1, . . . , n we have ti 6 = tj for i 6 = j. We would like to find a polynomial</p>"},{"location":"3.%20Semester/Design%20and%20Evaluation%20of%20User%20Interfaces/","title":"What is it?","text":"<p>This course is about designing and making user interfaces that explain themselves without the need of labels or cluttered.</p> <p>The focus is on usability which means we should create interfaces effectively, efficient and to the satisfaction of users.</p> <p>UX = User eXperience</p> <p>use FACTOR or PACT</p> <p>There are rules for minimal requirements for accessibility enforced by law</p> <p>Fitts\u2019s law is a mathematical formula which relates the time required to move to a target as a function of the distance to the target and the size of the target itself, say moving a pointer using a mouse to a particular button.</p> <p></p> \\[T(time to move) = k log2(D/S + 0.5)\\] <p>D = distance</p> <p>S = size</p> <p>people can differ in:</p> <ul> <li>Physiological differences<ul> <li>Disabilities (blindness, motor control etc.)</li> <li>Anthropometrics, measurement of a person, Finger size (male/female, thick/thin)</li> <li>Ergonomic knowledge about the capacities of a person.</li> </ul> </li> <li>Psychological differences<ul> <li>Spatial abilities</li> <li>Attention</li> <li>Memory</li> <li>Emotional disorders (depression)</li> <li>Personality types</li> </ul> </li> <li>Mental models</li> <li>Social differences<ul> <li>Motivation</li> <li>Novice/Expert</li> <li>Homogeneous groups</li> <li>Heterogeneous groups</li> </ul> </li> </ul>"},{"location":"3.%20Semester/Design%20and%20Evaluation%20of%20User%20Interfaces/lecture1/","title":"Lecture 1","text":"<p>Poor experience</p> <p>good experience</p> <p>Question</p> <p>What is the aim of the system?</p> <p>The aim of both systems is to store and display information in a neat and organized way.</p> <p>Question</p> <p>Who are the target users?</p> <p>Poor experience: a user has little or no experience with game server hosting aka guides</p> <p>Good experience: for Mantas Diego and students cramming for a test</p> <p>Question</p> <p>What activities are the system supposed to support, and in which context(s)?</p> <p>Poor experience: showing guides in an easy and accessible way</p> <p>Good experience: showing notes in an easy and accessible way</p> <p>Question</p> <p>Why did the use of the system lead to a poor/good experience?</p> <p>Poor experience: dashboard is cluttered and displays way too much irrelevant information. Books/cards are not laid out nicely and some of them have nonsensical names. Clicking into a book is inconsistent and brings up irrelevant or empty pages the search is slow and unresponsive and could use improvement</p> <p>Good experience: easy accessibility for light and dark mode. No bombardment of information upon visit. Amazing search. Nice theme</p> <p>Question</p> <p>How would you improve this?</p> <p>Poor experience: cleaning up the main interface. Make pages act consistently. Better contrast between background color and text color</p> <p>Question</p> <p>How could you improve this further?</p> <p>Folders acting as notes. Better navigation bar. Adjusting heading color, so it doesn't blend in as much in dark mode. Adjusting highlighting color in light mode.</p>"},{"location":"3.%20Semester/Design%20and%20Evaluation%20of%20User%20Interfaces/lecture2/","title":"Lecture 2","text":"<p>Requirements - Exercise 1</p> <p>What types of requirements exist?</p> <p>Functional and non-functional</p> <p>Requirements - Exercise 2</p> <p>What characterizes the different types of requirements?</p> <p>functional is what a system must do and non-functional is what qualities the system must have</p> <p>Requirements - Exercise 3</p> <p>How can requirements be represented in a requirements specification? (would you use a table and what would that look like?)</p> <p>using requirements table </p> <p>Requirements - Exercise 4</p> <p>What characterizes a \"good\" requirement? How should a good requirement be phrased?</p> <p>A requirement which is specific and doesn't leave any unanswered questions. </p> <p>Requirements - Exercise 5</p> <p>How can requirements be prioritized?</p> <p></p> <p>using MoSCoW model</p> <ul> <li>Must have</li> <li>Should have</li> <li>Could have</li> <li>want to have, but won't at this time</li> </ul> <p>Requirements - Exercise 6</p> <p>Who decides which priority to give the requirements? And how is this decided?</p> <p>stakeholders</p> <p>Data Collection - Exercise 1</p> <p>Which of the following are considered qualitative data collection methods?</p> <ul> <li> <p>Interviews</p> </li> <li> <p>Questionnaires</p> </li> <li> <p>Cultural probes</p> </li> <li> <p>Observation</p> </li> </ul> <p>Why?</p> <p>Interviews and observations </p> <p>Interviews because you interview each person independently and adapt the interview to the specific person.</p> <p>Observations because you observe what they do and can notice things which might not have been mentioned like them using hotkeys.</p> <p>Data Collection - Exercise 2</p> <p>Which of the following are considered quantitative data collection methods?</p> <ul> <li> <p>Interviews</p> </li> <li> <p>Questionnaires</p> </li> <li> <p>Cultural probes</p> </li> <li> <p>Observation</p> </li> </ul> <p>Why?</p> <p>Questionaires are ussually limited in scope and sent to many people at once so you cant get much speciallized data out of them</p> <p>Data Collection - Exercise 3</p> <p>Which of the following can be considered both quantitative and qualitative data collection methods?</p> <ul> <li> <p>Interviews</p> </li> <li> <p>Questionnaires</p> </li> <li> <p>Cultural probes</p> </li> <li> <p>Observation</p> </li> </ul> <p>Why?</p> <p>Cultural probes because it is a huge amount of data you need to piece together. Which might or might not get you what you need.</p> <p>Data Collection - Exercise 4</p> <p>What would be the best data collection method for gathering data in this situation: Your informants are part of a different community than your own. You want to get an understanding of their everyday lives and habits in using technologies at home. Which method of data collection techniques would be most suitable?</p> <ul> <li> <p>Interviews</p> </li> <li> <p>Questionnaires</p> </li> <li> <p>Cultural probes</p> </li> <li> <p>Observation</p> </li> </ul> <p>Why?</p> <p>Interview and cultural probe and possible an observation. Because they are qualitative data and it is very specific data to them you want</p> <p>Data Collection - Exercise 5</p> <p>How many forms of interviews are there and how would you describe these?</p> <p>Structured: Already pre-written questions</p> <p>Semi-structured: Few pre-written questions and its allowed deviate from them</p> <p>Unstructured: You ask questions as they come</p> <p>Data Collection - Exercise 6</p> <p>What are the benefits and drawbacks of the different interview forms?</p> <p>Structured: You get the questions answered you feel are important, but might leave out questions that could lead to a better end product for the users/stakeholders</p> <p>Semi-structured: might be too time-consuming. Else has benefits of both of them</p> <p>Unstructured: questions might feel random, and you might seem ill prepared to the interviewed person. You will get answers to the important questions for the specific person.</p> <p>Data Collection - Exercise 7</p> <p>What are some considerations you should take into account in terms of the language of interview questions, i.e. formulating questions?</p> <p>That it needs to be formal language. And precise in what the question formulation, so there is no guesswork in what you mean.</p> <p>Data Collection - Exercise 8</p> <p>What are some benefits of observations compared to interviews?</p> <p>In interview the user might not tell you everything as they might be doing something unconsciously. But if you observe them you will be able to see that they might be using key binds to navigate the interface. </p> <p>Data Collection - Exercise 9</p> <p>In which situations would it be most suitable to use questionnaires over interviews? </p> <p>when you need big amounts of data to find patterns</p> <p>Data Collection - Case 1: Data gathering in a hospital ward</p> <p>Imagine the following use context for a software system: Nurses and doctors work together in a hospital ward where children with serious illnesses (e.g. acute respiratory symptoms) are being treated. The ward is filled with technical equipment. The children come in with their parents, and the staff need to both treat the childrens\u2019 health conditions and consult and update their systems with information while also calming the children and informing their parents about the procedures.</p> <p>You need to design a mobile app which shows a dashboard overview of data from various sensors (such as an electrocardiogram for monitoring heart rate). This is used to monitor the health of the children and warn staff about a change in physical conditions of the children in this use context. </p> <ol> <li>Conduct a PACT-analysis of this scenario. </li> <li>Which of the following data collection techniques would you find suitable for gaining an understanding of the use context? <ul> <li>Interviews </li> <li>Focus group interviews</li> <li>Questionnaires</li> <li>Cultural probes</li> <li>In situ observation</li> <li>Artefact collection</li> <li>Usability evaluation</li> </ul> </li> <li>Why did you choose these data collection techniques? (strengths/weaknesses?)</li> <li>Who would you include in the data collection and in what activities?</li> <li>Are there any of the techniques that you would not use in this context and why not? </li> <li>If you choose to conduct observations, which ethical issues would you consider in this specific situation?</li> <li>If you choose to conduct artefact collection, which ethical issues would you consider in this specific situation? </li> <li>If you choose to interview a doctor, what practical considerations would you take into account?</li> <li>If you choose to interview a child, what practical considerations would you take into account? </li> </ol>"},{"location":"3.%20Semester/Design%20and%20Evaluation%20of%20User%20Interfaces/lecture3/","title":"Lecture 3","text":"<p>Envisionment \u2013 Exercise 1</p> <p>What is the main purpose of the envisionment phase in a software development project?</p> <p>presenting the design and evaluation of ideas</p> <p>Envisionment \u2013 Exercise 2</p> <p>Why is it important to go through the envisioment phase?</p> <p>It provides some sort of structure for the development phase. And the design can be evaluated if it meets the requirements</p> <p>Envisionment \u2013 Exercise 3</p> <p>How does envisionment support requirements elicitation?</p> <p>by using wireframes you can display your envision for product and get your stakeholders' opinion of those and if they meet the requirements</p> <p>Envisionment \u2013 Exercise 4</p> <p>Name at least five envisionment techniques, explain the different techniques, and when they are most likely to be used in the design process.</p> <p>sketching early before the design is in place</p> <p>storyboards middle</p> <p>wireframes middle</p> <p>navigational maps: end</p> <p>Prototypes?: end</p> <p>Envisionment \u2013 Exercise 5</p> <p>In which part of the design and development process would you use a tool like Balsamiq and why?</p> <p>middle to make wireframes of how stuff should look like</p> <p>Envisionment \u2013 Exercise 6</p> <p>What elements of a design do you focus on in lo-fi prototyping? (low fidelity)</p> <p>Where the buttons might be located Where the navigation might be located General layout</p> <p>Envisionment \u2013 Exercise 7</p> <p>How would you explain the difference between lo-fi and hi-fi prototyping? (low fidelity &amp; high fidelity)</p> <p>Lo-fi focuses on the genreal layout Hi-fi is a done looking prototype with some functionality</p> <p>Envisionment \u2013 Exercise 8</p> <p>What could be some disadvantages of developing hi-fi prototypes too early in the envisionment phase?</p> <p>Expensive, time consuming, high commitment, and hard to make radical changes.</p> <p>Envisionment \u2013 Exercise 9</p> <p>What is the fundamental difference between a sketch and a prototype?</p> <p>The prototype has some functionality, a sketch has none.</p> <p>Envisionment \u2013 Exercise 10</p> <p>What are the benefits of user sketching?</p> <p>Getting valuable information on where the users think buttons and functionality should be located</p>"},{"location":"3.%20Semester/Design%20and%20Evaluation%20of%20User%20Interfaces/lecture4/","title":"Lecture 4","text":"<p>Physical Design - General Guidelines and Widgets Exercise 1</p> <p>What is a design widget?</p> <p>A small individual component you can interact with</p> <p>Physical Design - General Guidelines and Widgets Exercise 2</p> <p>List and explain 10 design widgets known from web application user interfaces.</p> <ul> <li>radio button: a round circle you can check there can only be one selected at a time</li> <li>multi select: checkmarks where you can select more than 1 element you can even select them all</li> <li>button: a generic button you can click and something happens</li> <li>link: a text you can click to be redirected.</li> <li>select box: a drop down menu where you can select a singular element.</li> <li>text box: a text box you can enter something into</li> <li>date select: a field where you can enter a date by clicking it. It opens up to let you click on different dates.</li> <li>password: a field which is hidden that lets you enter your password</li> <li>slider: a movable box on a line that lets you select an amount within range.</li> <li>Tooltip: A label or text box that</li> <li>Tab: Navigation tab that is used to organize data</li> </ul> <p>Physical Design - General Guidelines and Widgets Exercise 3</p> <p>List and explain (5-7 or more if you can) design widgets known from mobile user interfaces. </p> <ul> <li>Notification banner: a banner which shows you notifications from your apps.</li> <li>text box: a text box you can enter something into</li> <li>slider: a movable box on a line that lets you select an amount within range.</li> <li>date select: a field where you can enter a date by clicking it. It opens up to let you click on different dates.</li> <li>time select : lets you swipe up and down to select specific time or time frame</li> <li>multi select: checkmarks where you can select more than 1 element you can even select them all</li> <li>select box: a drop-down menu where you can select a singular element.</li> </ul> <p>Physical Design - General Guidelines and Widgets Exercise 4</p> <p>Nielsen's heuristic \"Consistency and Standards\" states that user interface designers should express the same type of design elements (e.g. radio button widgets) in the same way across designs. This heuristic also implies that designed elements should conform to platform interface conventions. Which of the following notions is used to explain why humans can readily perceive the affordance of standardized design elements? (select one option and explain this concept).</p> <ul> <li>Visual cues</li> <li>Perceptual set</li> <li>Interactivity</li> </ul> <p>perceptual set it is what we can see what we can hear and what we can feel it is how we conceptualize the world.</p> <p>Physical Design - General Guidelines and Widgets Exercise 5</p> <p>Nielsen's heuristic \"Match between system and the real world\" states that the system should speak the users' language, with words, phrases, and concepts familiar to the user, rather than system-oriented terms.</p> <ul> <li>Find examples of good design metaphors that borrow concepts from \"the real world\" (one example per group member).</li> <li>Find examples of bad user interface design that fail to match system interactions with real-world concepts, leading to misinterpretation (one example per group member).</li> <li>Discuss the examples in detail - what characterizes a good/bad design metaphor?</li> </ul> <p>Physical Design - General Guidelines and Widgets Exercise 6</p> <p>Nielsen's heuristic \"Flexibility and efficiency of use\" states a demand for less interactions that allow faster navigation.</p> <ul> <li>In the group, find one example of an inflexible/inefficient system that requires unnecessary interactions.</li> <li>Redesign the user interface in order to optimize the flexibility and efficiency of the system.</li> </ul> <p>Physical Design - General Guidelines and Widgets Exercise 7</p> <p>Find a system that you find to be a badly designed system (could for instance be the same system you chose for the exercise in the DEB1 session).</p> <ul> <li>List specific design elements that do not adhere to Jakob Nielsen's heuristics and argue why that is the case.</li> <li>List specific design elements that do not adhere to Petrie and Powers' heuristics and argue why that is the case.</li> </ul> <p>Physical Design - General Guidelines and Widgets Exercise 8</p> <p>Redesign the specific design elements from exercise 7 such that the specific design elements now adhere to Nielsen's and Petrie &amp; Powers' guidelines. Use Balsamiq to make the improved designs.</p> <p>Physical Design - General Guidelines and Widgets Exercise 9</p> <p>Consider the Whirlpool Microwave oven in the picture.</p> <p></p> <ul> <li>According to your own interpretation, list the functionality underlying each of the icons</li> <li>Compare your interpretations to the real meanings of the icons (don't look at this before you've listed your own interpretations): Link to correct funtionality</li> <li>Apply Hortons icon checklist to redesign the icons that you misinterpreted</li> </ul>"},{"location":"3.%20Semester/Design%20and%20Evaluation%20of%20User%20Interfaces/lecture5/","title":"Lecture 5","text":"<p>Physical Design \u2013 Attention Exercise 1</p> <p>What characterizes \u2019the Stroop effect\u2019 and when does it occur? Find examples to illustrate this and test it yourselves. </p> <p>when color of text doesn't match the word like red written with blue color</p> <p>Physical Design \u2013 Attention Exercise 2</p> <p>What is the difference between \u2018selective\u2019 and \u2018divided\u2019 attention, and how do these types of attention relate to \u2018the cocktail party effect\u2019? </p> <p>How is this relevant within user interface design? </p> <p>Selective is when there is only 1 thing you focus on</p> <p>and divided is where your attention is split</p> <p>Physical Design \u2013 Attention Exercise 3</p> <p>Find 6 examples of user interface designs, that support selective and divided attention (3 of each type of attention). Discuss in the group why each is selective or divided.</p> <p>Selective </p> <p>divided social media sites facebook instagram twitter</p>"},{"location":"3.%20Semester/Object-Oriented%20Programming/","title":"What is it?","text":"<p>Links</p> <p>API Documentation</p> <p>The Java Language Specification</p> Topic Description State How we represent an instance of an object. States are variables but inside a class. States are mostly private and is only modifiable via methods, that way they are protected from malicious access. Behaviors/Methods Interactions with objects work through methods. they are functions but inside a class, they interact with a specific instance of a class unless a static method is used. Methods are within classes and interact with the object. Paradigm The basic programming unit of OOP are objects. Functions are side-effect free.  Command is a statement. Abstraction Focus on essential details. Programs decomposed into smaller, understandable subprograms. Which means that there are a lot of hidden implementations, such as the easy conversion between array and list. Encapsulation Combines data and operations in an entity. For example a class contains data and operations into an entity. Inheritance Derive new types that are more specialized. Supertype is a generalization of subtype, and subtype is a specialization of the supertype. Polymorphism Behavior depends on context. Allows for reusability and maintainability. Works for all subtypes, allows implicit conversions, and can be parameterized. <p></p>"},{"location":"3.%20Semester/Object-Oriented%20Programming/exercise%202/","title":"Exercises 2","text":"# Question # 7 Consider the following two variable declarations: <code>byte small = 10; int big = 99;</code> how will you assign the value in the big variable to the small variable? By casting the bigger one to the smaller one, though this is dangerous because an int could pottentially hold a higher number compared to a byte, since a byte can only have a max of 127 8 Why do you need to use a cast when you assign a variable of a bigger size to a variable of smaller size, for example, assigning an int variable to a byte variable? Because casting is a way to safely try to convert between different types of data, and handle issues like overflows. 9 Name two primitive data types in Java whose values can be floating-point numbers. float and double 10 If you declare a variable of the boolean type, what are the two possible values it can have? True and False 11 Can you cast a boolean value to an int type, as shown in the following statement? <code>boolean done = true; int x = (int) done;</code> What happens when you compile this snippet of code? No, java unlike other languages does not treat true and false as 0 and 1 12 Are the boolean literals true and false the same as integers 1 and 0? No 13 Name an unsigned numeric data type in Java. java does not support unsigned numbers of any kind, char could technically work as an unsigned 16bit number but thats not in spirits with the answer <p>Question</p> <p>What will be the value of x after this snippet of code is executed? Explain your answer with steps performed explaining how the value of x changes during the execution of the second statement <pre><code>public static void main(String[] args) {\nint x = 23;\nx = x++ % x;\nSystem.out.println(x);\nSystem.out.println(23%24);\n}\n</code></pre></p> <p>Because the \"++\" is at the end which means java will use post-increment, it will only change after the variable is being used, so it becomes 23 % 24 as it is 23. </p> <p>Question</p> <p>Explain why the following snippet of code does not compile: <pre><code>int x = 10;\nboolean yes = (x = 20);\n</code></pre></p> <p>because you cant assign int to boolean you are missing a second = for comparison</p> <p>Question</p> <p>What will be the value assigned to the variable named yes when the following snippet of code is executed? <pre><code>int x = 10;\nboolean yes = (x == 20);\n</code></pre></p> <p>false</p> <p>Question</p> <p>What will be the output when the following snippet of code is executed? <pre><code>boolean b = true;\nString str = !b + \" is not \" + b;\nSystem.out.println(str);\n</code></pre></p> <p>false is not true because the negative of true is false.</p> <p>Question</p> <p>Complete the second statement using the ternary operator (? :) and the bitwise AND operator (&amp;) that will make a message \"x is odd\". Your code must contain the following tokens in any order: x, &amp;, ==, ?, :, \"odd\", and \"even\". You may use additional tokens as needed: <pre><code>int x = 1969;\nString str = Integer./* your code goes here */;\nSystem.out.println(\"1969 in hex is \" + str);\n</code></pre></p> <pre><code>int x = 19;\nString msg = x % 2 == 0 ? \"even\" : \"odd\";\nSystem.out.println(\"x is \" + msg);\n</code></pre> <p>Question</p> <p>Fix the compile-time errors in the following snippet of code. Make sure the fixed code prints the value of y: <pre><code>int x = 10;\nint y = 20;\nif (x = 10)\n    y++;\nSystem.out.println(\"y = \" + y);\nelse\n    y--;\nSystem.out.println(\"y = \" + y);\n</code></pre></p> <p>fixed.</p> <pre><code>int x = 10;\nint y = 20;\nif (x == 10){\n      y++;\n      System.out.println(\"y = \" + y);\n} else{\n      y--;\n      System.out.println(\"y = \" + y);\n}\n</code></pre> <p>Question</p> <p>Rewrite the following snippet of code using an if-else statement. Make sure that the switch and if-else statements both have the same output when you initialize the variable x to another value. (Hint: This is a tricky question because there are no break statements in any case labels.) <pre><code>int x = 50;\nswitch (x) {\ncase 10:\n    System.out.println(\"Ten\");\ndefault:\n    System.out.println(\"No-match\");\ncase 20:\n    System.out.println(\"Twenty\");\n}\n</code></pre></p> <pre><code>int x = 50;\nif (x == 10) {\n    System.out.println(\"Ten\");\n    System.out.println(\"No-match\");\n    System.out.println(\"Twenty\");\n} else if (x == 20) {\n    System.out.println(\"Twenty\n} else {\n    System.out.println(\"No-match\");\n    System.out.println(\"Twenty\");\n}\n</code></pre> <p>Question</p> <p>The intent of the following for statement is to print integers from 1 to 10 in reverse order. The code does not print the numbers as intended. Identify the logical error and fix the code, so it prints 10, 9, 8, 1: <pre><code>for(byte b = 10; b &gt;= 1; b++)\n    System.out.println(b);\n</code></pre></p> <pre><code>for(byte b = 10; b &gt;= 1; b--)\n    System.out.println(b);\n</code></pre> <p>Question</p> <p>Write a snippet of code using a for statement that calculates the sum of all integers from 1 to 10 and prints it on the standard output. The template for your code is as follows: <pre><code>int sum = 0;\nfor(&lt;your-code&gt;; &lt;your-code&gt;; &lt;your-code&gt;);\nSystem.out.println(\"Sum = \" + sum);\n</code></pre></p> <p><pre><code>int sum = 0;\nfor(int i = 1; i &lt;= 10; sum+=i++); // cursed\nSystem.out.println(\"Sum = \" + sum);\n</code></pre> <pre><code>int sum = 0;\nfor(int i = 1; i &lt;= 10; sum += i, i++); // still cursed\nSystem.out.println(\"Sum = \" + sum);\n</code></pre></p> <p>Question</p> <p>Revise your solution to exercise 10 (Exercise 11, Chapter 6) and make sure that System.out.println is called three times exactly and the calls are the same as in the switch statement (each of them is used only once)</p> <p>Rewrite the following snippet of code using an if-else statement. Make sure that the switch and if-else statements both have the same output when you initialize the variable x to another value. (Hint: This is a tricky question because there are no break statements in any case labels.) <pre><code>int x = 50;\nswitch (x) {\ncase 10:\n  System.out.println(\"Ten\");\ndefault:\n  System.out.println(\"No-match\");\ncase 20:\n  System.out.println(\"Twenty\");\n}\n</code></pre></p> <p>11 solution</p> <p><pre><code>int x = 50;\nif (x == 10) {\n    System.out.println(\"Ten\");\n    System.out.println(\"No-match\");\n    System.out.println(\"Twenty\");\n}\nif (x != 10 &amp;&amp; != 20) {\n    System.out.println(\"Twenty\n} else {\n    System.out.println(\"No-match\");\n    System.out.println(\"Twenty\");\n}\n</code></pre> 11 modified solution to meet 13 <pre><code>int x = 50;\nint x = 10;\nif (x == 10) {\n    System.out.println(\"Ten\");\n    x = 69;\n} \nif (x != 10 &amp;&amp; x != 20){\n    System.out.println(\"No-match\");\n    x = 20;\n}\nif(x == 20){   \n    System.out.println(\"Twenty\");\n}\n</code></pre> <pre><code>//less curseroni\nint x = 20;\nif (x == 10) {\n    System.out.println(\"Ten\");\n} if (x != 20) {\n    System.out.println(\"No-match\");\n}\nSystem.out.println(\"Twenty\");\n  ```\n!!! Question\n    Use a nested for statement to print the following pyramid:\n    ```\n        *\n       ***\n      *****\n     *******\n    ```\n```java\nfor (int i = 1; i &lt;= 4; i++) {\n// Printing leading spaces\nfor (int j = 1; j &lt;= 5 - i; j++) {\n    System.out.print(\" \");\n}\n// Printing asterisks\nfor (int j = 1; j &lt;= 2 * i - 1; j++) {\n    System.out.print(\"*\");\n}\n// Moving to the next line after each row\nSystem.out.println();\n}\n</code></pre></p> <p>Question</p> <p>Complete the following snippet so that it computes the Fibonacci of an integer n (replace ?1 and ?2 by zero, one, or more statements) <pre><code>int n = 15;\nint fib = 0;\nint k = 0;\n?1\nwhile ( k &lt; n ) {\n  ?2\n}\nSystem.out.println(\"The Fibonacci of \"+n+\" is \"+fib);\n</code></pre></p> <pre><code>int n = 15;\nint fib = 0;\nint k = 0;\nint last = 1;\nint tmp = last;\nwhile (k &lt; n) {\n    tmp = last;\n    last = fib + last;\n    fib = tmp;\n    k++;\n}\nSystem.out.println(\"The Fibonacci of \" + n + \" is \" + fib);\n</code></pre>"},{"location":"3.%20Semester/Object-Oriented%20Programming/exercise%203/","title":"Exercises 3","text":""},{"location":"3.%20Semester/Object-Oriented%20Programming/exercise%203/#exercises-week-3","title":"Exercises Week 3","text":"<p>1. Chapter 7 Exercise 7 [JavaFundamentals]</p> <p>Question: What is the output of the following code?</p> <pre><code>public class Employee {\n    String name;\n    boolean retired;\n    double salary;\n\n    public static void main(String[] args) {\n        Employee emp = new Employee();\n        System.out.println(emp.name);\n        System.out.println(emp.retired);\n        System.out.println(emp.salary);\n    }\n}\n</code></pre> <p>String = NULL</p> <p>boolean = false</p> <p>double = 0.0</p> <p>2. Chapter 8 Exercise 5 [JavaFundamentals]</p> <p>Create a class named Point2D with two int instance variables named x and y. Both instance variables should be declared private. Do not initialize the two instance variables. Add seters and geters for the two instance variables that will allow the users of the Point2D class to change and access their values. Declare the seters s setX(int x) and setY(int y) and geters as getX() and getY(). </p> <pre><code>public class Point2D {\n    private int x;\n    private int y;\n\n    public void setX(int x) {\n        this.x = x;\n    }\n\n    public int getX() {\n        return this.x;\n    }\n\n    public void setY(int y) {\n        this.y = y;\n    }\n\n    public int getY() {\n        return this.y;\n    }\n}\n</code></pre> <p>3. Chapter 8 Exercise 6 [JavaFundamentals]</p> <p>Implement a method named distance in the Point2D class that you created in the previous exercise. The method accepts an instance of the Point2D class and returns the distance between the current point and the point represented by the parameter. The method should be declared as follows:  <pre><code>public class Point2D {\n    /* Code from the previous exercise goes here. */\n    public double distance(Point2D p) {\n    /* Your code for this exercise goes here. */\n    } \n}\n</code></pre> Hint: The distance between two points (x1, y1) and (x2, y2) is computed as (\\(\\sqrt{(x1 - x2)^2 + (y1 - y2)^2}\\)\\). You can use Math.sqrt(n) method to compute the square root of a number n.</p> <pre><code>public class Point2D {\n    private int x;\n    private int y;\n\n    public void setX(int x) {\n        this.x = x;\n    }\n\n    public int getX() {\n        return this.x;\n    }\n\n    public void setY(int y) {\n        this.y = y;\n    }\n\n    public int getY() {\n        return this.y;\n    }\n\n    public double distance(Point2D p){\n        return Math.sqrt(Math.pow((p.getX() - this.x), 2) + Math.pow((p.getY() - this.y), 2));\n    }\n}\n</code></pre> <p>4. Chapter 8 Exercise 7 [JavaFundamentals]</p> <p>Enhance the Point2D class by adding a static factory method named create(). A factory method in a class is used to create objects of the class. The create() method should be declared as follows:  <pre><code>public class Point2D {\n    /* Code from the previous exercise goes here. */\n    public static Point2D create(int x, int y) {\n    /* Your code for this exercise goes here. */\n    }\n}\n</code></pre></p> <p><pre><code>public class Point2D {\n    private int x;\n    private int y;\n\n    public void setX(int x) {\n        this.x = x;\n    }\n\n    public int getX() {\n        return this.x;\n    }\n\n    public void setY(int y) {\n        this.y = y;\n    }\n\n    public int getY() {\n        return this.y;\n    }\n\n    public double distance(Point2D p){\n        return Math.sqrt(Math.pow((p.getX() - this.x), 2) + Math.pow((p.getY() - this.y), 2));\n    }\n\n    public static Point2D create(int x, int y){\n        Point2D something = new Point2D();\n        something.setX(x);\n        something.setY(y);\n        return something;\n    }\n}\n</code></pre>     The x and y instance variables of the returned Point2D object from the create() method should be initialized to the x and y parameters of this method, respectively</p> <p>5. Chapter 8 Exercise 10 [JavaFundamentals]</p> <p>(Chapter 8, exercise 10, [JavaFundamentals]) What will be the output when the following PassByValueTest class is run? <pre><code>// PassByValueTest.java\npackage com.jdojo.cls.excercise;\npublic class PassByValueTest {\n    public static void main(String[] args) {\n        int x = 100;\n        System.out.println(\"x = \" + x);\n        change(x);\n        System.out.println(\"x = \" + x);\n\n        Point2D p = new Point2D();\n        p.setX(40);\n        p.setY(60);\n        System.out.println(\"p.x = \" + p.getX() + \", p.y = \" + p.getY());\n\n        changePointReference(p);\n        System.out.println(\"p.x = \" + p.getX() + \", p.y = \" + p.getY());\n\n        changePoint(p);\n        System.out.println(\"p.x = \" + p.getX() + \", p.y = \" + p.getY());\n    }\n    public static void change(int x) {\n        x = 200;\n    }\n    public static void changePointReference(Point2D p) {\n        p = new Point2D();\n    }\n\n    public static void changePoint(Point2D p) {\n        int newX = p.getX() / 2;\n        int newY = p.getY() / 2;\n        p.setX(newX);\n        p.setY(newY);\n    } \n} \n</code></pre></p> <p>6. (Chapter 9, exercise 13, [JavaFundamentals])</p> <p>Create a Circle class that has three private final instance variables named x, y, and radius. The x and y instance variables represent the x and y coordinates of the center of the circle; they are of int data type. The radius instance variable represents the radius of the circle; it is of the double data type. Add a constructor to the Circle class that accepts the values for its instance variables x, y, and radius. Add geters for the three instance variables.</p> <p>7. (Chapter 9, exercise 14, [JavaFundamentals])</p> <p>Enhance the Circle class by adding four instance methods named centerDistance, distance, overlaps, and touches. All these methods accept a Circle as a parameter. The centerDistance method returns the distance (as a double) between the centers of the circle and another circle passed in as the parameter. The distance method returns the minimum distance (as a double) between the two circles. If two circles overlap, the distance method returns a negative number. The overlaps method returns true if two circles overlap and false otherwise. The touches method returns true if two circles touch each other and false otherwise. The distance method must use the centerDistance method. The body of the overlaps and touches methods must contain only one statement that uses the distance method.</p> <p>Hint The distance between two circles is the distance between their centers minus their radii. Two circles overlap if the distance between them is negative. Two circles touch if the distance between them is zero.</p> <p>8. (Chapter 9, exercise 15, [JavaFundamentals])</p> <p>Enhance the Circle class by adding two methods named perimeter and area that compute and return the perimeter and area of the circle, respectively</p> <p>9.  (Chapter 9, exercise 16, [JavaFundamentals])</p> <p>Add a second constructor to the Circle class that takes a double parameter, which is the radius of the circle. This constructor  should call another existing constructor of the Circle class with three parameters passing zero as the values for x and y</p> <p>10.</p> <p>Explain your answer to exercise 5 in detail.</p> <p>11.</p> <p>Did you use the keyword this in the definition of the class Circle? If you used it, was it necessary? Why?</p> <p>12.</p> <p>Write a method contains that determines if an instance of the Point2D class passed as parameter is contained by the current instance of Circle. This method returns true if the point is contained in the circle and false otherwise. In which of the classes will the new method be included? Justify your choice.</p> <p>13.</p> <p>Write a program that allows for creating circles and points (using the classes created in the previous exercises). The program must allow the user to create any number of circles or points in any order and store the circles and points in a suitable data structure (some op\ufffdons are arrays, java.util.ArrayList, java.util.Vector, java.util.LinkedList).</p> <p>Hint: you can use the methods Integer.parseInt(String) and Double.parseDouble(String) to parse String values as an integer value or a double value. Additionally, consider using java.util.Scanner to scan the user\u2019s input.</p> <p>14.</p> <p>Enhance the program that you wrote as solution to the previous exercise, allowing the user to request in any moment statistics about the circles and points that have been created so far. Examples of statistics: number of points and circles, largest number of circles that overlap, largest number of points contained by one circle.</p>"},{"location":"3.%20Semester/Object-Oriented%20Programming/lecture%203/","title":"Lecture 3","text":"<p>(Chapter 7, exercise 7, [JavaFundamentals])</p> <p>What is the output of the following code?</p> <p><pre><code>public class Employee {\n    String name;\n    boolean retired;\n    double salary;\n\n    public static void main(String[] args) {\n        Employee emp = new Employee();\n        System.out.println(emp.name);\n        System.out.println(emp.retired);\n        System.out.println(emp.salary);\n    }\n}\n</code></pre> Output is for String is null boolean is false and double is 0.0</p> <p>(Chapter 8, exercise 5, [JavaFundamentals]) Create a class named Point2D with two int instance variables named x and y.</p> <p>Both instance variables should be declared private. Do not ini\ufffdalize the two instance variables. Add seters and geters for the two instance variables that will allow the users of the Point2D class to change and access their values. Declare the seters as setX(int x) and setY(int y) and geters as getX() and getY().</p> <pre><code>public class Point2D {\n    private int x;\n    private int y;\n\n    public void setX(int x) {\n        this.x = x;\n    }\n\n    public int getX() {\n        return this.x;\n    }\n\n    public void setY(int y) {\n        this.y = y;\n    }\n\n    public int getY() {\n        return this.y;\n    }\n    public static void main(String[] args) {\n\n    }\n}\n</code></pre> <p>(Chapter 8, exercise 6, [JavaFundamentals])</p> <p>Implement a method named distance in the Point2D class that you created in the previous exercise. The method accepts an instance of the Point2D class and returns the distance between the current point and the point represented by the parameter. The method should be declared as follows:</p> <pre><code>public class Point2D {\n /* Code from the previous exercise goes here. */\npublic double distance(Point2D p) {\n /* Your code for this exercise goes here. */\n } \n}\n</code></pre> <p>answer <pre><code>public class Point2D {\n    private int x;\n    private int y;\n\n    public void setX(int x) {\n        this.x = x;\n    }\n\n    public int getX() {\n        return this.x;\n    }\n\n    public void setY(int y) {\n        this.y = y;\n    }\n\n    public int getY() {\n        return this.y;\n    }\n\n    public double distance(Point2D point) {\n        return (Math.sqrt(Math.pow(this.x - point.x, 2)) + (Math.pow(this.y - point.y, 2)));\n    }\n\n\n    public static void main(String[] args) {\n        Point2D point1 = new Point2D();\n        point1.setX(5);\n        point1.setY(10);\n        Point2D point2 = new Point2D();\n        point2.setX(5);\n        point2.setY(10);\n        System.out.println(point1.distance(point2));\n\n    }\n}\n</code></pre> Prints out 0 <pre><code>\n</code></pre></p> <p>(Chapter 8, exercise 7, [JavaFundamentals])</p> <p>Enhance the Point2D class by adding a static factory method named create(). A factory method in a class is used to create objects of the class. The create() method should be declared as follows:</p> <p><pre><code>public class Point2D {\n /* Code from the previous exercise goes here. */\npublic static Point2D create(int x, int y) {\n /* Your code for this exercise goes here. */\n }\n}\n</code></pre> answer <pre><code>public class Point2D {\n    private int x;\n    private int y;\n\n    public void setX(int x) {\n        this.x = x;\n    }\n\n    public int getX() {\n        return this.x;\n    }\n\n    public void setY(int y) {\n        this.y = y;\n    }\n\n    public int getY() {\n        return this.y;\n    }\n\n    public double distance(Point2D point) {\n        return (Math.sqrt(Math.pow(this.x - point.x, 2)) + (Math.pow(this.y - point.y, 2)));\n    }\n\n    public static Point2D create(int x, int y) {\n        Point2D temp = new Point2D();\n        temp.setX(x);\n        temp.setY(y);\n        return temp;\n    }\n\n    public static void main(String[] args) {\n        Point2D point1 = Point2D.create(5, 10);\n        Point2D point2 = Point2D.create(5, 11);\n        System.out.println(point1.distance(point2));\n\n    }\n}\n</code></pre> Prints out 1.0</p> <p>(Chapter 8, exercise 10, [JavaFundamentals])</p> <p>What will be the output when the following PassByValueTest class is run?</p> <p><pre><code> // PassByValueTest.java\npackage com.jdojo.cls.excercise;\n\npublic class PassByValueTest {\n    public static void main(String[] args) {\n        int x = 100;\n        System.out.println(\"x = \" + x);\n        change(x);\n        System.out.println(\"x = \" + x);\n\n        Point2D p = new Point2D();\n        p.setX(40);\n        p.setY(60);\n        System.out.println(\"p.x = \" + p.getX()\n                + \", p.y = \" + p.getY());\n\n        changePointReference(p);\n        System.out.println(\"p.x = \" + p.getX()\n                + \", p.y = \" + p.getY());\n\n        changePoint(p);\n        System.out.println(\"p.x = \" + p.getX()\n                + \", p.y = \" + p.getY());\n    }\n\n    public static void change(int x) {\n        x = 200;\n    }\n\n    public static void changePointReference(Point2D p) {\n        p = new Point2D();\n    }\n\n    public static void changePoint(Point2D p) {\n\n        int newX = p.getX() / 2;\n        int newY = p.getY() / 2;\n        p.setX(newX);\n        p.setY(newY);\n    }\n}\n</code></pre> Prints out:</p> <p>x = 100</p> <p>x = 100</p> <p>p.x = 40, p.y = 60</p> <p>p.x = 40, p.y = 60</p> <p>p.x = 20, p.y = 30</p> <p>(Chapter 9, exercise 13, [JavaFundamentals])</p> <p>Create a Circle class that has three private final instance variables named x, y, and radius. The x and y instance variables represent the x and y coordinates of the center of the circle; they are of int data type. The radius instance variable represents the radius of the circle; it is of the double data type. Add a constructor to the Circle class that accepts the values for its instance variables x, y, and radius. Add geters for the three instance variables</p> <pre><code>public class Circle {\n    private int x;\n    private int y;\n    private double radius;\n\n    public int getX() {\n        return x;\n    }\n\n    public int getY() {\n        return y;\n    }\n\n    public double getRadius() {\n        return radius;\n    }\n\n    public Circle(int x, int y, double radius) {\n        this.x = x;\n        this.y = y;\n        this.radius = radius;\n    }\n\n    public static void main(String[] args) {\n\n    }\n}\n</code></pre> <p>(Chapter 9, exercise 14, [JavaFundamentals])</p> <p>Enhance the Circle class by adding four instance methods named centerDistance, distance, overlaps, and touches. All these methods accept a Circle as a parameter. The centerDistance method returns the distance (as a double) between the centers of the circle and another circle passed in as the parameter. The distance method returns the minimum distance (as a double) between the two circles. If two circles overlap, the distance method returns a negative number. The overlaps method returns true if two circles overlap and false otherwise. The touches method returns true if two circles touch each other and false otherwise. The distance method must use the centerDistance method. The body of the overlaps and touches methods must contain only one statement that uses the distance method.</p> <p>Hint The distance between two circles is the distance between their centers minus their radii. Two circles overlap if the distance between them is negative. Two circles touch if the distance between them is zero</p> <pre><code>public class Circle {\n    private int x;\n    private int y;\n    private double radius;\n\n    public int getX() {\n        return x;\n    }\n\n    public int getY() {\n        return y;\n    }\n\n    public double getRadius() {\n        return radius;\n    }\n\n    public Circle(int x, int y, double radius) {\n        this.x = x;\n        this.y = y;\n        this.radius = radius;\n    }\n\n    public double centerDistance(Circle circle) {\n        return (Math.sqrt(Math.pow(this.x - circle.x, 2)) + (Math.pow(this.y - circle.y, 2)));\n    }\n\n    public double distance(Circle circle) {\n        return centerDistance(circle) - radius - circle.radius;\n    }\n\n    public boolean overlaps(Circle circle) {\n        return distance(circle) &lt; 0;\n    }\n\n    public boolean touches(Circle circle) {\n        return distance(circle) == 0;\n    }\n\n    public static void main(String[] args) {\n\n    }\n}\n</code></pre> <p>(Chapter 9, exercise 15, [JavaFundamentals])</p> <p>Enhance the Circle class by adding two methods named perimeter and area that compute and return the perimeter and area of the circle, respectively</p> <pre><code>public class Circle {\n    private int x;\n    private int y;\n    private double radius;\n\n    public int getX() {\n        return x;\n    }\n\n    public int getY() {\n        return y;\n    }\n\n    public double getRadius() {\n        return radius;\n    }\n\n    public Circle(int x, int y, double radius) {\n        this.x = x;\n        this.y = y;\n        this.radius = radius;\n    }\n\n    public double centerDistance(Circle circle) {\n        return (Math.sqrt(Math.pow(this.x - circle.x, 2)) + (Math.pow(this.y - circle.y, 2)));\n    }\n\n    public double distance(Circle circle) {\n        return centerDistance(circle) - radius - circle.radius;\n    }\n\n    public boolean overlaps(Circle circle) {\n        return distance(circle) &lt; 0;\n    }\n\n    public boolean touches(Circle circle) {\n        return distance(circle) == 0;\n    }\n\n    public double perimeter() {\n        return 2 * Math.PI * radius;\n    }\n\n    public double area() {\n        return Math.PI * Math.pow(radius, 2);\n    }\n\n    public static void main(String[] args) {\n\n    }\n}\n</code></pre> <p>(Chapter 9, exercise 16, [JavaFundamentals])</p> <p>Add a second constructor to the Circle class that takes a double parameter, which is the radius of the circle. This constructor should call another existing constructor of the Circle class with three parameters passing zero as the values for x and y.</p> <pre><code>public class Circle {\n    private int x;\n    private int y;\n    private double radius;\n\n    public int getX() {\n        return x;\n    }\n\n    public int getY() {\n        return y;\n    }\n\n    public double getRadius() {\n        return radius;\n    }\n\n    public Circle(int x, int y, double radius) {\n        this.x = x;\n        this.y = y;\n        this.radius = radius;\n    }\n    public Circle(double radius){\n        this(0,0,radius);\n    }\n    public double centerDistance(Circle circle) {\n        return (Math.sqrt(Math.pow(this.x - circle.x, 2)) + (Math.pow(this.y - circle.y, 2)));\n    }\n\n    public double distance(Circle circle) {\n        return centerDistance(circle) - radius - circle.radius;\n    }\n\n    public boolean overlaps(Circle circle) {\n        return distance(circle) &lt; 0;\n    }\n\n    public boolean touches(Circle circle) {\n        return distance(circle) == 0;\n    }\n\n    public double perimeter() {\n        return 2 * Math.PI * radius;\n    }\n\n    public double area() {\n        return Math.PI * Math.pow(radius, 2);\n    }\n\n    public static void main(String[] args) {\n\n    }\n}\n</code></pre> <p>Question</p> <p>Explain your answer to exercise 5 in detail.</p> <p>You overwrite copy of a point you need to overwrite each value independently for it to work.</p> <p>Question</p> <p>Did you use the keyword this in the definition of the class Circle? If you used it, was it necessary? Why?</p> <p>From what I know yes as I am calling itself constructor</p> <p>Question</p> <p>Write a method contains that determines if an instance of the Point2D class passed as parameter is contained by the current instance of Circle. This method returns true if the point is contained in the circle and false otherwise. In which of the classes will the new method be included? Justify your choice.</p> <p><pre><code>public class Circle {\n    private int x;\n    private int y;\n    private double radius;\n\n    public int getX() {\n        return x;\n    }\n\n    public int getY() {\n        return y;\n    }\n\n    public double getRadius() {\n        return radius;\n    }\n\n    public Circle(int x, int y, double radius) {\n        this.x = x;\n        this.y = y;\n        this.radius = radius;\n    }\n\n    public Circle(double radius) {\n        this(0, 0, radius);\n    }\n\n    public double centerDistance(Circle circle) {\n        return (Math.sqrt(Math.pow(this.x - circle.x, 2)) + (Math.pow(this.y - circle.y, 2)));\n    }\n\n    public double distance(Circle circle) {\n        return centerDistance(circle) - radius - circle.radius;\n    }\n\n    public boolean overlaps(Circle circle) {\n        return distance(circle) &lt; 0;\n    }\n\n    public boolean touches(Circle circle) {\n        return distance(circle) == 0;\n    }\n\n    public double perimeter() {\n        return 2 * Math.PI * radius;\n    }\n\n    public double area() {\n        return Math.PI * Math.pow(radius, 2);\n    }\n\n    public boolean contains(Point2D point) {\n        return (Math.sqrt(Math.pow(this.x - point.getX(), 2)) + (Math.pow(this.y - point.getY(), 2))) &lt;= this.radius;\n    }\n\n    public static void main(String[] args) {\n\n    }\n}\n</code></pre> I wrote it in circle class as it is a circle that can contain a point and not the other way around</p> <p>Question</p> <p>Write a program that allows for creating circles and points (using the classes created in the previous exercises). The program must allow the user to create any number of circles or points in any order and store the circles and points in a suitable data structure (some options are arrays, java.util.ArrayList, java.util.Vector, java.util.LinkedList). </p> <p>Hint: you can use the methods Integer.parseInt(String) and Double.parseDouble(String) to parse String values as an integer value or a double value. Additionally, consider using java.util.Scanner to scan the user\u2019s input.</p>"},{"location":"3.%20Semester/Object-Oriented%20Programming/miniprojects/Mini1/","title":"Mini1","text":""},{"location":"3.%20Semester/Object-Oriented%20Programming/miniprojects/Mini1/#instructions","title":"Instructions.","text":"<ul> <li>During the self-studies you will work on a mini-project. This work can be done individually or in groups. However, it is recommended to work in groups but making sure that everyone understands the solutions.</li> <li>In this self-study, you will get familiar with the mini-project domain and some relevant activities within this domain that your solution should provide support for.</li> <li>Your solution to this self-study can be submitted via Moodle:https://www.moodle.aau.dk/mod/assign/view.php?id=1617453. Submissions must be done by October 13th at 11:59am.</li> <li>Your submission should include: (i) a ZIP file with the source code (.java files) and instructions on how to compile and run your program (without using an IDE). (ii) a text document (as a PDF file) that explains how your code provides solutions for each of the tasks in this self-study. The text must relate specific fragments of code to specific tasks and provide clear and concise answers to any explicit request stated as part of the task description. This PDF file must contain at most 19000 characters. </li> <li>After submitting your solution, you can reserve a feedback session via Moodle: https://www.moodle.aau.dk/mod/scheduler/view.php?id=1617461. Please reserve the feedback session in advance (at least two working days before it takes place). If you worked in a group, please have one student book the feedback session on behalf of the group. Feedback sessions typically last 15 minutes and take place in the group rooms.</li> <li>This mini-project domain is described on page 2 and the tasks that you have to complete are described on page 3.</li> <li>As part of your solution to this self-study you must write a program in Java that follows the principles of the object-oriented programming paradigm.</li> <li>You can ask for clarifications about this sef-study via email (gmontoya@cs.aau.dk) or Teams (team code: yhjm1d5). However, please be aware that some of the tasks can be solved in several ways and that you have certain freedom, e.g., you can make appropriate assumptions if you find that some aspects allow for multiple interpretations. Please summarize your assumptions and relevant choices.</li> </ul>"},{"location":"3.%20Semester/System%20Development/","title":"What is it?","text":"<p>It is basically a way of working with and designing bigger systems/applications.</p> <p>The way this class works by trying to design systems in various ways.</p> <p>Abstract</p> <p>the point with this class is to use oop programming effectively by understanding classes and using object for different aspects of your application</p>"},{"location":"3.%20Semester/System%20Development/#terms","title":"Terms","text":"Topic Description Analysis Understanding a system in its context and conditions for implementation. Design Create a theoretical system without many unknown/uncertainties as possible. Implementation Realize a design on a technical platform = programming/setting up the physical objects. Method The method can be multiple things, water fall and iterative ??? Needs more text. Granularity How accurate does the system need to be. <p>Example</p> <p>Lets say we have 2 systems. System 1 needs to keep track of items and system 2 just needs to work with piles of dirt. In system one it is very important every object has its own unique id, but in system two we dont need an id for each rock, if the piles have an id that would be good enough. This is because individual rocks wont ever need a unique id so why spare the resources for one, whilst the items do need their own because they will get shipped out to different adresses.</p> <p>Problem Domain = the problem we want solved</p> <p>Application Domain = the tools we can use to solve the problem</p>"},{"location":"3.%20Semester/System%20Development/#examples","title":"Examples","text":"<pre><code>Problem Domain\n\n    the greenhouse and its temperature\n\nApplication Domain = mantinance?\n\n    gardener\n</code></pre> <p>Object  And entity with state identity and behavior</p> <p>Class A collection describing objects with common behavior and attributes</p> <p>Teacher: vare betalt vare genopfyldt vare fundet medarbejder m\u00f8dtind medarbejder tagethjem</p> <p>Hair Salon</p> <p> Classes <pre><code>Salon\n\ncustomer\n\nlocation\n\nHaircut\n\nworker\n</code></pre> <p> Events instantaneous incident involving one or more objects not a method needs to be instantly registered by the system. <pre><code>timeReserved\n\npaid\n\narrived\n\ngotHaircut\n\ngotHairWashed\n</code></pre> <pre><code>classDiagram\n    Salon &lt;|-- Employee\n    Salon &lt;|-- Service\n    Salon &lt;|-- Appointment\n    class Salon{\n        String name\n        String location\n        Employee[] employees\n        Service[] services\n        Appointment[] appointments\n        HireEmplyee()\n        FireEmplyee()\n    }\n    class Employee{\n        String id\n        String name\n        String position\n        scheduleAppointment()\n        quitJob()\n    }\n    class Customer{\n        String id\n        String name\n        String phone\n        String email\n        makeAppointment()\n        cancelAppointment()\n        paid()\n        didntArrive()\n    }\n    class Service{\n        String name\n        Number price\n        String duration\n    }\n    class Appointment{\n        String id\n        Date dateTime\n        Customer customer\n        Employee employee\n        Service service\n        makeAppointment()\n        cancelAppointment()\n    }\n\n    Customer  --  Appointment : books</code></pre> <p></p> <p>customer is a subclass of person and so is employee superclass is written with cursive also known as generalization</p> <p></p> <p>\u2018has \u2010a\u2019 or \u2018owns \u2010a\u2019 relation (more common)</p> <p>example 1 car has 4 wheels or more </p> <p>number ..* means the amount before the number as minimum and more cause dot dot star</p> <p>cant be changed</p> <p></p> <p>loose non-defining relation example 1 or more persons can have 0 or more cars</p> <p>can be changed</p> <p></p> <p>control structure of behavior </p> <p></p> <p>+ means 0 or once * means it can happen many times</p> <pre><code>classDiagram\n    Class01 &lt;|-- Class02 : Inheritance\n    Class03 --|&gt; Class04 : Inheritance\n    Class05 --&gt; Class06 : Association\n    Class07 --* Class08 : Aggregation\n    Class09 --o Class10 : Composition\n    Class11 ..&gt; Class12 : Dependency\n    Class13 -- Class14 : Association (undirected)</code></pre>"},{"location":"3.%20Semester/System%20Development/lecture%201/","title":"Lecture 1","text":"<p>exercise</p> <p>Aalborg Taxi want a new system for administering and monitoring their taxis, drivers, customers and taxi rides. Describe in text the problem domain and application domain of such a system.</p>"},{"location":"3.%20Semester/System%20Development/lecture%201/#application-domain","title":"application domain","text":"<p>The application domain would the objects/users needed to solve this issue, which in this case would be:</p>"},{"location":"3.%20Semester/System%20Development/lecture%201/#problem-domain","title":"problem domain","text":"<p>The problem domain would be the things/drivers/people we want to organize and move around</p> <p>taxis, drivers, customers and taxi rides</p> <pre><code>graph TD;\nsubgraph Application Domain\n    A1[The program]\n    A2[Google maps api]\n\n    A1 --&gt; C1[Feature 1]\n    A1 --&gt; C2[Feature 2]\nend\n\nsubgraph Problem Domain\n    B1[Taxis]\n    B2[Rides]\n    B3[Drivers]\nend\n\nsubgraph both\n    B4[Customers]\nend\n\n</code></pre> <p>exercise</p> <p>Are the taxis, drivers, customers and taxi rides in the application domain, the problem domain or both? Why?</p> <p>Look above</p> <p>exercise</p> <p>Make a system definition for the Taxi System. The system definition must comply with the FACTOR-criterion.</p>"},{"location":"3.%20Semester/System%20Development/lecture%201/#factor","title":"FACTOR","text":"<p>Factor</p> <p>F = Functionality (The system functions that support the application domain tasks)</p> <p>A = Application domain (Those parts of an organization that administrate, monitor, or control a problem domain) </p> <p>C = Conditions (The conditions under which the system will be developed and used) </p> <p>T = Technology (Both the technology used to develop the system and the technology on which the system will run) </p> <p>O = Objects (The main objects in the problem domain) </p> <p>R = Responsibility (The system\u2019s overall responsibility in relation to its context) </p> <p>These elements describe the most fundamental decisions involved in creating a sound computerized solution. </p> Acronym Description F (Functionality) The system will enable the management of taxis, drivers, and customers, offer real-time tracking of rides, and calculate fares. A (Application Domain) The system is intended for Aalborg Taxi, a taxi service company, to administer and monitor their fleet of taxis, drivers, and customers. C (Conditions) The system will be developed in phases with iterative feedback from the taxi company who test it internally (scrum), and will be used as a prototype which then should get turned into a real product with enough itterations. T (Technology) The system will be web based application with html, css, and javascript as the front end. The backend will be done in java which then also integrates with a database both running on linux in a container, for easy scalability. O (Objects) The main objects in the problem domain are taxis, drivers, customers, and taxi rides. R (Responsibility) The system\u2019s overall responsibility is to effectively and efficiently manage, track, and monitor the company\u2019s taxis, drivers, customers, and rides. <p>exercise</p> <p>Make a radically different system definition for the Taxi System. The system definition must comply with the FACTOR-criterion. Compare with the first one; what are the differences.</p> Acronym Description F (Functionality) The system will be able to actively track cars, customers, and prices. It will be an app for customers to order rides and monitor where their ordered car is, somewhat like uber. A (Application Domain) The system is intended for custumers, to order taxis. C (Conditions) The system will be developed with the waterfall method, and will be used as a full prototype which then can be used as a reference point for an actual application. T (Technology) The system will be written fully in rust, for the ui qt will be used as it has a rust wrapper avalable. O (Objects) The main objects in the problem domain are taxis, customers, and taxi rides. R (Responsibility) The system\u2019s overall responsibility is to effectively and efficiently, track the customers ride."},{"location":"3.%20Semester/System%20Development/lecture%202/","title":"Lecture 2","text":"<p>We chose Kaj\u2019s Cars</p> <p>Classes</p> <p>customer</p> <p>car</p> <p>employe</p> <p>reservation</p> <p>Events</p> <p>Reserve</p> <p>Payment method</p>"},{"location":"3.%20Semester/System%20Development/lecture%202/#car-rental","title":"Car Rental","text":"<p>We have heavily expanded this chart since lecture 1.</p> <pre><code>classDiagram\n\n    class carRental {\n        String name\n        String age\n        String carType\n    }\n\n    class Person {\n        String name\n        String age\n\n    }\n\n    class Customer {\n        Boolean goodCustomer\n        string driversLicense\n        reserve()\n        receiveGift()\n    }\n\n    class privateCustomer {\n        Date rentalDate\n    }\n\n    class BusinessCustomer {\n        String businessName\n        String taxID\n\n    }\n\n    class Car {\n        String model\n        String type\n        getStatus()\n        needsMaintnance()\n    }\n\n    class Employee {\n        Float Salary\n        fire()\n        giveGift(Customer)\n    }\n\n    class Reservation {\n        String reservationID\n        Date startDate\n        Date endDate\n        cancelReservation()\n    }\n\n    class LeaseAgreement {\n        String leaseID\n        Date startDate\n        Date endDate\n        String insuranceType\n        float deposit\n        finalizeLease()\n    }\n\n\n\n    BusinessCustomer &lt;|-- Customer : Inherits\n    privateCustomer &lt;|-- Customer : Inherits\n    Customer &lt;|-- Person : Inherits\n    Employee &lt;|-- Person : Inherits\n\n\n</code></pre> Event Description reserve() Reserves a car receiveGift() When a customer receives a gift from Kaj's Cars giveGift() When Kaj's Cars decides to give giftes to customer finalizeLease() Agree upon the leasing agreement cancelReservation() Cancel a reservation fire() Fire an employee needsMaintenance() If a car have been damaged or needs maintenance in any way Class Name Description carRental keeps info about who borrows a car and cars type Customer base class for customer keeps their payment information inherits from person privateCustomer there was a destinction between private and BusinessCustomer which is why we need two seperate classes BusinessCustomer there was a destinction between private and BusinessCustomer which is why we need two seperate classes Car we need to store cars such as millages, model, and other information Employee keeps employee info like salary and gives the ability to give gifts to good customers Reservation Reservation is going to be a form anyways so why not just create a class LeaseAgreement We need to be able to create a lot of these agreements which is why creating a class for it is useful as it allows us to store all of them easely"},{"location":"3.%20Semester/System%20Development/lecture%203/","title":"Lecture 3","text":"<p>Question</p> <p>Find candidates for structural relations between the classes in your event table - do this pair by pair</p> <pre><code>classDiagram\n\n    class carRental {\n        String name\n        String age\n        String carType\n    }\n\n    class Reservation {\n        String reservationID\n        Date startDate\n        Date endDate\n        cancelReservation()\n    }\n\n    class Person {\n        String name\n        String age\n\n    }\n\n    class LeaseAgreement {\n        String leaseID\n        Date startDate\n        Date endDate\n        String insuranceType\n        float deposit\n        finalizeLease()\n    }\n\n    class Customer {\n        Boolean goodCustomer\n        string driversLicense\n        reserve()\n        receiveGift()\n    }\n\n    class privateCustomer {\n        Date rentalDate\n    }\n\n    class BusinessCustomer {\n        String businessName\n        String taxID\n\n    }\n\n    class Car {\n        String model\n        String type\n        getStatus()\n        needsMaintnance()\n    }\n\n    class Employee {\n        Float Salary\n        fire()\n        giveGift(Customer)\n    }\n\n\n\n\n\n\n    BusinessCustomer &lt;|-- Customer : Inherits\n    privateCustomer &lt;|-- Customer : Inherits\n    Customer &lt;|-- Person : Inherits\n    Employee &lt;|-- Person : Inherits\n    LeaseAgreement &lt;..&gt; Customer : Relation\n    LeaseAgreement &lt;..&gt; Car : Relation\n    Reservation &lt;..&gt; Customer : Relation\n\n\n</code></pre> <p>Question</p> <p>Explore if any of the patterns are relevant to your case - do this for each class</p> Class Name Description carRental Customer Hierarchy privateCustomer Hierarchy BusinessCustomer Hierarchy Car Employee Hierarchy Reservation LeaseAgreement person Hierarchy, roles <p>Question</p> <p>Make a class diagram</p> <p>See question 1!</p> <p>Question</p> <p>Look for opportunities to simplify and extend the class diagram</p> <p>incorporate roles</p> <pre><code>classDiagram\n\n    class carRental {\n        String name\n        String age\n        String carType\n    }\n\n    class Reservation {\n        String reservationID\n        Date startDate\n        Date endDate\n        cancelReservation()\n    }\n\n    class Person {\n        String name\n        String age\n\n    }\n\n    class LeaseAgreement {\n        String leaseID\n        Date startDate\n        Date endDate\n        String insuranceType\n        float deposit\n        finalizeLease()\n    }\n\n    class Customer {\n        Boolean goodCustomer\n        string driversLicense\n        reserve()\n        receiveGift()\n    }\n\n\n\n    class Car {\n        String model\n        String type\n        getStatus()\n        needsMaintnance()\n    }\n\n    class Employee {\n        Float Salary\n        fire()\n        giveGift(Customer)\n    }\n\n    class Roles {\n\n    }\n\n    class privateCustomer {\n        Date rentalDate\n    }\n\n    class BusinessCustomer {\n        String businessName\n        String taxID\n\n    }\n\n\n\n\n\n\n\n    Roles &lt;|-- Employee\n    Roles &lt;|-- Customer\n    Person &lt;|-- Roles\n    BusinessCustomer --|&gt; Customer : Inherits\n    privateCustomer --|&gt; Customer : Inherits\n    LeaseAgreement --&gt; Customer\n\n\n</code></pre>"},{"location":"3.%20Semester/System%20Development/lecture%204/","title":"Lecture 4","text":"<pre><code>classDiagram\n\n    class carRental {\n        String name\n        String age\n        String carType\n    }\n\n    class Person {\n        String name\n        String age\n\n    }\n\n    class Customer {\n        Boolean goodCustomer\n        string driversLicense\n        reserve()\n        receiveGift()\n    }\n\n    class privateCustomer {\n        Date rentalDate\n    }\n\n    class BusinessCustomer {\n        String businessName\n        String taxID\n\n    }\n\n    class Car {\n        String model\n        String type\n        getStatus()\n        needsMaintnance()\n    }\n\n    class Employee {\n        Float Salary\n        fire()\n        giveGift(Customer)\n    }\n\n    class Reservation {\n        String reservationID\n        Date startDate\n        Date endDate\n        cancelReservation()\n    }\n\n    class LeaseAgreement {\n        String leaseID\n        Date startDate\n        Date endDate\n        String insuranceType\n        float deposit\n        finalizeLease()\n    }\n\n\n\n    BusinessCustomer &lt;|-- Customer : Inherits\n    privateCustomer &lt;|-- Customer : Inherits\n    Customer &lt;|-- Person : Inherits\n    Employee &lt;|-- Person : Inherits\n\n\n</code></pre> <p>Question</p> <p>Start with event traces for the simple classes</p> <pre><code>graph TD\n  %% Styling nodes\n  style car fill:#f9f,stroke:#333,stroke-width:2px\n\n  %% Subgraph for car\n  subgraph car\n    a1[Car Status]\n    a2[Get Me]\n  end\n\n  %% Defining relations\n  a1 --|getStatus| a1\n  a1 --|getMe| a2\n</code></pre> <p>Question</p> <p>Describe behavioural patterns from the event traces</p> <p>Question</p> <p>Continue with the more complex classes</p> <p>Question</p> <p>If the behavioural pattern becomes too complicated, consider using the stepwise role or stepwise relation pattern \u2013 this introduces new classes</p> <p>Question</p> <p>Make sure there are behavioural patterns that control sequence and some that don\u2019t (structured/unstructured)</p> <p>Question</p> <p>Add attributes to classes and events</p> <p>Question</p> <p>Check the behavioural patterns against the class diagram</p>"},{"location":"3.%20Semester/System%20Development/lecture%205/","title":"Lecture 5","text":"<p>Question</p> <p>Start from work tasks (from A in system definition)</p> <p>Kaj's biler:</p> <ul> <li>Rent car</li> <li>Book car</li> <li>Order maintenance</li> </ul> <p>Question</p> <p>For each work task, find the key actors</p> <ul> <li>rent car: customer</li> <li>book car: customer</li> <li>order maintenance: customer, employee</li> </ul> <p>Question</p> <p>Describe key use cases for these actors</p> <p>Rent car: Renting a car is started by a customer. The account owner selects a car tier and insurence plan. </p> <p>Book car:</p> <p>Order maintenance: Order maintenance start by contacting an employee and describing your issue with the car depending on the issue you can be issued a temporary car while your is under maintenance and the car gets swapped and swapped back after the maintenance is done.</p> <p>Question</p> <p>Complete the actors</p>"},{"location":"3.%20Semester/System%20Development/lecture%205/#customer","title":"Customer","text":"<p>Purpose:</p> <p>Characteristics: Customers in this system include many varieties of people who have been registered in the system in order to rent a car.</p> <p>Example:</p>"},{"location":"3.%20Semester/System%20Development/lecture%205/#employee","title":"Employee","text":"<p>Purpose: A person that can handle customers, booking and rental. Is able to give gifts to \"good\" customers.</p> <p>Characteristics: Includes only people hired by the company who have special access.</p> <p>Example:</p> <p>Question</p> <p>Complete the use cases</p> <p>???</p> <p>Question</p> <p>Compile a complete actor table (overview)</p> Use Cases/Actors Customer Employee rent x book x Maintenance x x <p>6.7 13</p> <p>Discuss how actors, system functions, and model objects interact in a use case. Start from an example and identify the actor actions, functions, and objects involved in the use case.</p> <p>6.7 15</p> <p>Mobile phone. Continue your considerations of the system for a single mobile phone (see Exercise 3.14). Analyze the system's usage. Develop the actor table and specify selected use cases.</p> <p>6.7 16</p> <p>Teaching administration. Continue your considerations of the system for monitoring student activities in a university department (see exercise 3.15). Analyze the system's usage. Develop the actor table and specify selected </p> <p>6.7 17</p> <p>Elevator control. Continue your considerations of the system to control elevator movement in a building (see Exercise 3.16). Analyze the system's usage. Develop the actor table and specify selected use cases.</p>"},{"location":"3.%20Semester/System%20Development/lecture%206/","title":"Lecture 6","text":"<p>Question</p> <p>Teaching administration. Consider a system for monitoring student activities in a university department. The department offers its students courses and thesis projects. Each course follows one of several course descriptions. Courses and thesis projects are evaluated through graded exams. The department must track all its activities, the teachers responsible for the activity, the student participating in the activity, and the results of the activity exams. </p> <p>Add details and assumptions as needed and address the following problems. List class candidates in the teaching administration system. List event candidates in the teaching administration system. Evaluate the candidates systematically and produce the resulting event table.</p> <pre><code>classDiagram\n    class Person{\n        -id\n    }\n    class Teacher{\n        courseResponsibility[]\n    }\n\n    class Course{\n        -id\n        -description\n    }\n\n    class Student{\n\n    }\n\n    class Exam{\n        -int8 grade\n    }\n    Course *-- Exam : 1 - *\n    Person &lt;-- Teacher\n    Person &lt;-- Student\n    Student &lt;|-- Course : 1 - 1..*\n    Student &lt;|-- Exam : 1 - *\n</code></pre> <p>Question</p> <p>Teaching administration. Continue your considerations of the system for monitoring student activities in a university department (see Exercise 3.15). Develop a complete list of functional requirements by systematically examining the model and use cases.</p> <p>Question</p> <p>Elevator control. Continue your considerations of the system to control elevator movement in a building (see Exercise 3.16). Develop a complete list of functional requirements by systematically examining the model and use cases.</p>"},{"location":"5.%20Semester/","title":"Complete Guide to Using nix-shell","text":""},{"location":"5.%20Semester/#windows-special-instructions-linux-and-macos-should-skip-this-section","title":"Windows special instructions - linux and macos should skip this section.","text":"<p>if you dont have WSL2, or are unsure if you have WSL2, it is a good idea to follow this official microsoft guide to set it up: https://learn.microsoft.com/en-us/windows/wsl/install</p> <p>After that is done you can run <code>sudo apt install neofetch</code> and then run <code>neofetch</code> to see if you have WSL2 installed and set up properly.</p> <p>We are now assuming you have entered a WSL2 terminal. If you have WSL2 set up properly, you should now clone the moodle repository or your own fork of it inside of a wsl folder. (this is because leaving it inside of a windows folder has serious performance issues.)</p> <pre><code>cd ~\ngit clone (your fork of moodle)\nls \ncd (the folder name you see above)\n</code></pre>"},{"location":"5.%20Semester/#installing-nix","title":"Installing Nix","text":"<p>To properly install nix you need to go to this website https://nixos.org/download/ and follow the instructions for your operating system. (linux, macos, or windows)</p>"},{"location":"5.%20Semester/#understanding-nix-shell-basics","title":"Understanding nix-shell Basics","text":"<ul> <li>How to use nix-shell Just go to the root of your moodle repository and run <code>nix-shell</code> and it will automatically set up the environment + the database for you.</li> </ul>"},{"location":"5.%20Semester/#troubleshooting","title":"Troubleshooting","text":"<ul> <li>If you are having issues make sure to read the FAQ below.</li> <li>If the FAQ didnt help then message Diego or mantarias on discord.</li> </ul>"},{"location":"5.%20Semester/#faq","title":"FAQ","text":""},{"location":"5.%20Semester/#general-any-command-shown-here-should-be-run-from-within-an-active-nix-shell-environment","title":"General - Any command shown here should be run from within an active nix-shell environment.","text":"<ul> <li>what ports do i use? Database: 3306, Moodle: 8000, Adminer: 8080</li> <li>How do i run phpunit tests? Run <code>runit</code>. This will set up and run phpunit tests for you. Be aware that the first run might take a while.</li> <li>How do i quickly set up moodle after deleting config.php. Just run <code>create_config</code>. This will set up the config.php for you.</li> <li>How do i run CodeSniffer? Run <code>sniffit</code>. This will run the codesniffer for you.</li> <li>How do i run CodeSniffer so it automatically fixes errors for me? Make sure to run sniffit first, and then run <code>fixit</code>. This will run the codesniffer fixer for you. Keep in mind this can only fix some errors.</li> <li>How do i reset the database? Exit nix-shell by writing <code>exit</code>, then delete the mariadb_data folder and run <code>nix-shell</code> again.</li> <li>I cant open adminer (localhost:8080) what do i do? It is likely that you already have mariadb running on this port, so you need to make sure it is disabled, and then re-run <code>nix-shell</code></li> <li>How do i use grunt? Make sure you have a working config.php file (make sure phpunit and codesniffer can properly run). Then you can run <code>gruntit</code>, This will install, configure, and run grunt on our project to minify the javascript files.</li> </ul>"},{"location":"5.%20Semester/#wsl2","title":"WSL2","text":"<ul> <li>My performance is bad how do i fix it? Make sure you have WSL2 set up properly, and that you are running the moodle repository from within a WSL folder. (see windows special instructions above)</li> </ul>"},{"location":"5.%20Semester/#macos","title":"MacOS","text":"<ul> <li>Mac is not completely ready yet, either ask diego or wait for this guide to be finished with macos.</li> </ul>"}]}